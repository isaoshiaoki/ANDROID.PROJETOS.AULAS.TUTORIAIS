// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915"},"updated":{"$t":"2018-05-08T15:07:47.380+07:00"},"category":[{"term":"Android UI"},{"term":"library"},{"term":"data loading"},{"term":"android basic"},{"term":"material design"},{"term":"listview"},{"term":"tutorials"},{"term":"viewpager"},{"term":"animation"},{"term":"recyclerview"},{"term":"activity"},{"term":"gridview"},{"term":"static image"},{"term":"TOP useful library"},{"term":"lollipop"},{"term":"actionbar"},{"term":"google playservices"},{"term":"cardview"},{"term":"android tabs"},{"term":"api"},{"term":"intent"},{"term":"Firebase"},{"term":"facebook"},{"term":"toolbar"},{"term":"Gmail style"},{"term":"database"},{"term":"dialog"},{"term":"edittext"},{"term":"services"},{"term":"slidingmenu"},{"term":"BroadcastReceiver"},{"term":"android studio"},{"term":"asynctask"},{"term":"floating action button"},{"term":"picasso"},{"term":"scroll event"},{"term":"views"},{"term":"widget"},{"term":"Bottom Sheet"},{"term":"Data Binding"},{"term":"QR code"},{"term":"barcodescanner"},{"term":"bubble layout"},{"term":"content provider"},{"term":"device information"},{"term":"files"},{"term":"lock screen"},{"term":"menu"},{"term":"notification"},{"term":"pull to refresh"},{"term":"sharedpreference"},{"term":"sqlite"},{"term":"textview"},{"term":"vision API"},{"term":"webservice"},{"term":"Bottom Navigation View"},{"term":"DateTime picker"},{"term":"Input Method Framework"},{"term":"Permission"},{"term":"StackView"},{"term":"butterknife"},{"term":"camera"},{"term":"carousel layout"},{"term":"chart"},{"term":"chat application"},{"term":"checkbox"},{"term":"chip"},{"term":"downloadManager"},{"term":"event bus"},{"term":"handler"},{"term":"json"},{"term":"location"},{"term":"navigationdrawer"},{"term":"parcelable"},{"term":"progressbar"},{"term":"resources"},{"term":"searchview"},{"term":"serializable"},{"term":"soap"},{"term":"telephony API"},{"term":"volley"},{"term":"xml parser"},{"term":"Android M"},{"term":"CountdownTimer"},{"term":"JobScheduler"},{"term":"MediaPlayer"},{"term":"NestedScrollView"},{"term":"REST"},{"term":"actionbarsherlock"},{"term":"battery"},{"term":"bluetooth"},{"term":"captcha"},{"term":"chrome custom tab"},{"term":"color picker"},{"term":"crouton"},{"term":"device rotation"},{"term":"download"},{"term":"draggablepanel"},{"term":"drawing"},{"term":"expandable listview"},{"term":"font"},{"term":"fragment"},{"term":"fresco"},{"term":"gifs"},{"term":"google map"},{"term":"google plus"},{"term":"gson"},{"term":"horizontal scrollview"},{"term":"imageloader"},{"term":"jar"},{"term":"java basic"},{"term":"loader manager"},{"term":"matrix"},{"term":"nearby API"},{"term":"network info"},{"term":"ormlite"},{"term":"palette"},{"term":"pdf"},{"term":"pdfrenderer"},{"term":"popupwindow"},{"term":"ratingbar"},{"term":"scratch view"},{"term":"sensor"},{"term":"skew layout"},{"term":"slidinguppanel"},{"term":"sparkline"},{"term":"spinner"},{"term":"style"},{"term":"swipeable listview"},{"term":"switch"},{"term":"theme"},{"term":"touch"},{"term":"twitter"},{"term":"video record"},{"term":"webview"},{"term":"youtubeplayer"}],"title":{"type":"text","$t":"Learn Programming Together"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/-\/cardview?alt=json-in-script\u0026max-results=5"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/search\/label\/cardview"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/-\/cardview\/-\/cardview?alt=json-in-script\u0026start-index=6\u0026max-results=5"}],"author":[{"name":{"$t":"Hồng Thái"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"8"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"5"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-3199244637813268098"},"published":{"$t":"2017-02-17T11:33:00.000+07:00"},"updated":{"$t":"2017-02-17T11:33:59.028+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Android UI"},{"scheme":"http://www.blogger.com/atom/ns#","term":"cardview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"recyclerview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"scroll event"}],"title":{"type":"text","$t":"Android RecyclerView dynamically load more items when scroll to end with bottom ProgressBar"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; Load more data when scrolling to bottom of list view\/table view is one the most popular design style which available in a lot of application, for example: Facebook, Google+,... By my \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2015\/03\/android-listview-dynamically-load-more.html\" target=\"_blank\"\u003Eprevious post\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E, you've learn the way to do this trick with \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E. As you are already known, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E is a new component introduced in Android Lollipop, this component increases performances respect to \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E. Moreover, respect to \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E is much more customizable.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Today, with this post, I would like to talk about making an endless\u0026nbsp;\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E\u0026nbsp;and when data is loading, it will show a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EProgressBar\u003C\/code\u003E at the bottom. \u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EAdding dependencies to project\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The first work after creating a new Android Studio project is adding \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E denpendency to your app level \u003Cb\u003E\u003Ci\u003Ebuild.gradle\u003C\/i\u003E\u003C\/b\u003E. In this sample project, I set each \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E item as a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ECardView\u003C\/code\u003E, so you must add it's dependency, too: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Edependencies {\u003Cbr \/\u003E    compile 'com.android.support:appcompat-v7:25.1.0'\u003Cbr \/\u003E    compile 'com.android.support:recyclerview-v7:25.1.0'\u003Cbr \/\u003E    compile 'com.android.support:cardview-v7:25.1.0'\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ECreate layout files\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Now we must provide some necessary XML files to define layouts. Because of we will set a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EProgressBar\u003C\/code\u003E at the bottom of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E when data is loading, it will have two item types. The normal item that to show info of user and loading item that place at bottom to show progress bar.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Layout for the normal item: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eitem_recycler_view_row.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:card_view=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    card_view:cardUseCompatPadding=\"true\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"match_parent\"\u003Cbr \/\u003E        android:background=\"?android:selectableItemBackground\"\u003Cbr \/\u003E        android:padding=\"10dp\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:id=\"@+id\/txt_email\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:textColor=\"@android:color\/black\"\u003Cbr \/\u003E            android:textSize=\"16sp\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:id=\"@+id\/txt_phone\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_below=\"@id\/txt_email\"\u003Cbr \/\u003E            android:textColor=\"@android:color\/black\"\u003Cbr \/\u003E            android:textSize=\"12sp\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u0026lt;\/android.support.v7.widget.CardView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Layout for the loading item: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eitem_loading.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:orientation=\"vertical\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;ProgressBar\u003Cbr \/\u003E        android:id=\"@+id\/progressBar1\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_gravity=\"center_horizontal\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/LinearLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; And you must put a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E object to the main activity: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:paddingBottom=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    android:paddingLeft=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingRight=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingTop=\"@dimen\/activity_vertical_margin\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E        android:id=\"@+id\/recycler_view\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\" \/\u0026gt;\u003Cbr \/\u003E\u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ECreate a POJO class\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; We've just create all necessary layouts for this project, now please move to programmatically code. Firstly, provide a POJO class (model object) simply like this: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EContact.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.endlessrecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class Contact {\u003Cbr \/\u003E    private String email;\u003Cbr \/\u003E    private String phone;\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getEmail() {\u003Cbr \/\u003E        return email;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public void setEmail(String email) {\u003Cbr \/\u003E        this.email = email;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getPhone() {\u003Cbr \/\u003E        return phone;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public void setPhone(String phone) {\u003Cbr \/\u003E        this.phone = phone;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EDefine an interface for callbacks\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Now, make an interface named \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EOnLoadMoreListener\u003C\/code\u003E with an abstract method \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EonLoadMore()\u003C\/code\u003E which will be invoked when we scroll the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E to end: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EOnLoadMoreListener.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.endlessrecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic interface OnLoadMoreListener {\u003Cbr \/\u003E    void onLoadMore();\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConfiguration in RecyclerView adapter\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; In this \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E adapter (I named as \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EContactAdapter\u003C\/code\u003E), we have 2 item types then must create two \u003Ci\u003E\u003Cb\u003EViewHolder\u003C\/b\u003E\u003C\/i\u003E like below: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E\/\/ \"Loading item\" ViewHolder\u003Cbr \/\u003Eprivate class LoadingViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        public ProgressBar progressBar;\u003Cbr \/\u003E\u003Cbr \/\u003E        public LoadingViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            progressBar = (ProgressBar) view.findViewById(R.id.progressBar1);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ \"Normal item\" ViewHolder\u003Cbr \/\u003Eprivate class UserViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        public TextView phone;\u003Cbr \/\u003E        public TextView email;\u003Cbr \/\u003E\u003Cbr \/\u003E        public UserViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            phone = (TextView) view.findViewById(R.id.txt_phone);\u003Cbr \/\u003E            email = (TextView) view.findViewById(R.id.txt_email);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003EIn this adapter, declare two constants that is delegate for two item type of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Eprivate final int VIEW_TYPE_ITEM = 0;\u003Cbr \/\u003Eprivate final int VIEW_TYPE_LOADING = 1;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003EProvide an \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EOnLoadMoreListener\u003C\/code\u003E variable and set an \"add method\": \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Eprivate OnLoadMoreListener onLoadMoreListener;\u003Cbr \/\u003Epublic void setOnLoadMoreListener(OnLoadMoreListener mOnLoadMoreListener) {\u003Cbr \/\u003E        this.onLoadMoreListener = mOnLoadMoreListener;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003EIn the constructor of this adapter class, we handle scroll event of the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E here. This is the most important step, firstly, you must get \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ELayoutManager\u003C\/code\u003E of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E, detecting scroll to bottom in \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EonScroll()\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E    private boolean isLoading;\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E    private List\u0026lt;Contact\u0026gt; contacts;\u003Cbr \/\u003E    private int visibleThreshold = 5;\u003Cbr \/\u003E    private int lastVisibleItem, totalItemCount;\u003Cbr \/\u003E\u003Cbr \/\u003E    public ContactAdapter(RecyclerView recyclerView, List\u0026lt;Contact\u0026gt; contacts, Activity activity) {\u003Cbr \/\u003E        this.contacts = contacts;\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E\u003Cbr \/\u003E        final LinearLayoutManager linearLayoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();\u003Cbr \/\u003E        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\u003Cbr \/\u003E                super.onScrolled(recyclerView, dx, dy);\u003Cbr \/\u003E                totalItemCount = linearLayoutManager.getItemCount();\u003Cbr \/\u003E                lastVisibleItem = linearLayoutManager.findLastVisibleItemPosition();\u003Cbr \/\u003E                if (!isLoading \u0026amp;\u0026amp; totalItemCount \u0026lt;= (lastVisibleItem + visibleThreshold)) {\u003Cbr \/\u003E                    if (onLoadMoreListener != null) {\u003Cbr \/\u003E                        onLoadMoreListener.onLoadMore();\u003Cbr \/\u003E                    }\u003Cbr \/\u003E                    isLoading = true;\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003EAdd some necessary methods to complete \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EContactAdapter\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E    @Override\u003Cbr \/\u003E    public int getItemViewType(int position) {\u003Cbr \/\u003E        return contacts.get(position) == null ? VIEW_TYPE_LOADING : VIEW_TYPE_ITEM;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\u003Cbr \/\u003E        if (viewType == VIEW_TYPE_ITEM) {\u003Cbr \/\u003E            View view = LayoutInflater.from(activity).inflate(R.layout.item_recycler_view_row, parent, false);\u003Cbr \/\u003E            return new UserViewHolder(view);\u003Cbr \/\u003E        } else if (viewType == VIEW_TYPE_LOADING) {\u003Cbr \/\u003E            View view = LayoutInflater.from(activity).inflate(R.layout.item_loading, parent, false);\u003Cbr \/\u003E            return new LoadingViewHolder(view);\u003Cbr \/\u003E        }\u003Cbr \/\u003E        return null;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\u003Cbr \/\u003E        if (holder instanceof UserViewHolder) {\u003Cbr \/\u003E            Contact contact = contacts.get(position);\u003Cbr \/\u003E            UserViewHolder userViewHolder = (UserViewHolder) holder;\u003Cbr \/\u003E            userViewHolder.phone.setText(contact.getEmail());\u003Cbr \/\u003E            userViewHolder.email.setText(contact.getPhone());\u003Cbr \/\u003E        } else if (holder instanceof LoadingViewHolder) {\u003Cbr \/\u003E            LoadingViewHolder loadingViewHolder = (LoadingViewHolder) holder;\u003Cbr \/\u003E            loadingViewHolder.progressBar.setIndeterminate(true);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return contacts == null ? 0 : contacts.size();\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public void setLoaded() {\u003Cbr \/\u003E        isLoading = false;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EActivity programmatically code\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; In \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EonCreate()\u003C\/code\u003E method of activity, we must call \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EsetOnLoadMoreListener()\u003C\/code\u003E and get new data inside \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EonLoadMore()\u003C\/code\u003E. This is full code of the activity: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EMainActivity.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.endlessrecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.os.Handler;\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.support.v7.widget.LinearLayoutManager;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.widget.Toast;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.ArrayList;\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003Eimport java.util.Random;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E    private List\u0026lt;Contact\u0026gt; contacts;\u003Cbr \/\u003E    private ContactAdapter contactAdapter;\u003Cbr \/\u003E    private Random random;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E\u003Cbr \/\u003E        contacts = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E        random = new Random();\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/set dummy data\u003Cbr \/\u003E        for (int i = 0; i \u0026lt; 10; i++) {\u003Cbr \/\u003E            Contact contact = new Contact();\u003Cbr \/\u003E            contact.setPhone(phoneNumberGenerating());\u003Cbr \/\u003E            contact.setEmail(\"DevExchanges\" + i + \"@gmail.com\");\u003Cbr \/\u003E            contacts.add(contact);\u003Cbr \/\u003E        }\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/find view by id and attaching adapter for the RecyclerView\u003Cbr \/\u003E        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);\u003Cbr \/\u003E\u003Cbr \/\u003E        recyclerView.setLayoutManager(new LinearLayoutManager(this));\u003Cbr \/\u003E        contactAdapter = new ContactAdapter(recyclerView, contacts, this);\u003Cbr \/\u003E        recyclerView.setAdapter(contactAdapter);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/set load more listener for the RecyclerView adapter\u003Cbr \/\u003E        contactAdapter.setOnLoadMoreListener(new OnLoadMoreListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onLoadMore() {\u003Cbr \/\u003E                if (contacts.size() \u0026lt;= 20) {\u003Cbr \/\u003E                    contacts.add(null);\u003Cbr \/\u003E                    contactAdapter.notifyItemInserted(contacts.size() - 1);\u003Cbr \/\u003E                    new Handler().postDelayed(new Runnable() {\u003Cbr \/\u003E                        @Override\u003Cbr \/\u003E                        public void run() {\u003Cbr \/\u003E                            contacts.remove(contacts.size() - 1);\u003Cbr \/\u003E                            contactAdapter.notifyItemRemoved(contacts.size());\u003Cbr \/\u003E\u003Cbr \/\u003E                            \/\/Generating more data\u003Cbr \/\u003E                            int index = contacts.size();\u003Cbr \/\u003E                            int end = index + 10;\u003Cbr \/\u003E                            for (int i = index; i \u0026lt; end; i++) {\u003Cbr \/\u003E                                Contact contact = new Contact();\u003Cbr \/\u003E                                contact.setPhone(phoneNumberGenerating());\u003Cbr \/\u003E                                contact.setEmail(\"DevExchanges\" + i + \"@gmail.com\");\u003Cbr \/\u003E                                contacts.add(contact);\u003Cbr \/\u003E                            }\u003Cbr \/\u003E                            contactAdapter.notifyDataSetChanged();\u003Cbr \/\u003E                            contactAdapter.setLoaded();\u003Cbr \/\u003E                        }\u003Cbr \/\u003E                    }, 5000);\u003Cbr \/\u003E                } else {\u003Cbr \/\u003E                    Toast.makeText(MainActivity.this, \"Loading data completed\", Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private String phoneNumberGenerating() {\u003Cbr \/\u003E        int low = 100000000;\u003Cbr \/\u003E        int high = 999999999;\u003Cbr \/\u003E        int randomNumber = random.nextInt(high - low) + low;\u003Cbr \/\u003E\u003Cbr \/\u003E        return \"0\" + randomNumber;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ERunning application\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; And this is output for our code: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/GeRSKO4.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/GeRSKO4.gif\" height=\"640\" width=\"358\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConclusions\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Over here, I've just present the way to put a progress bar at the bottom of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E and loading more data when scroll to end. This design is very popular in mobile application development, so I hope this post is helpful with your own work. Further, you can visit my \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2015\/03\/android-listview-dynamically-load-more.html\" target=\"_blank\"\u003Eprevious post\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E to learn solution with \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E or read related tutorial posts on other site like:\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EA tut on \u003Ca href=\"https:\/\/guides.codepath.com\/android\/Endless-Scrolling-with-AdapterViews-and-RecyclerView\" target=\"_blank\"\u003ECodePath\u003C\/a\u003E\u003C\/li\u003E\u003Cli\u003EA post from \u0026nbsp;\u003Ca href=\"http:\/\/msobhy.me\/2015\/09\/05\/infinite_scrolling_recyclerview\/\" target=\"_blank\"\u003EMohamed Sobhy's blog\u003C\/a\u003E\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/viid.me\/qxpnmP\" target=\"_blank\"\u003EDOWNLOAD CODE\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/3199244637813268098\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2017\/02\/android-recyclerview-dynamically-load.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/3199244637813268098"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/3199244637813268098"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2017\/02\/android-recyclerview-dynamically-load.html","title":"Android RecyclerView dynamically load more items when scroll to end with bottom ProgressBar"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-5725054422995325232"},"published":{"$t":"2017-01-03T16:49:00.000+07:00"},"updated":{"$t":"2017-01-03T16:49:17.448+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Android UI"},{"scheme":"http://www.blogger.com/atom/ns#","term":"cardview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"listview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"recyclerview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"scroll event"}],"title":{"type":"text","$t":"Populating multiple list views on a single Activity by using RecyclerView in Android"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; With \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E, building list view is now more simple, especially with new \"scrolling mechanism\", we now can put multiple \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerViews\u003C\/code\u003E into a single screen (\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EActivity\u003C\/code\u003E or \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EFragment\u003C\/code\u003E) without customizing in code.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; In this tip, I will present this solution through combining \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ENestedScrollView\u003C\/code\u003E and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E in the activity layout file. Of course, if you use \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E, please read \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2015\/05\/android-tip-combining-multiple.html\" target=\"_blank\"\u003Emy previous post\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E to find out the way to \u003Cb\u003E\u003Ci\u003Eexpand it's height\u003C\/i\u003E\u003C\/b\u003E to \u003Cb\u003E\u003Ci\u003Emaximum\u003C\/i\u003E\u003C\/b\u003E to display all list items.\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConfiguration in the layout (XML) file\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Make a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ENestedScrollView\u003C\/code\u003E work as the root view and put 2 \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E objects as it's children views to build this layout: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.v4.widget.NestedScrollView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\u003Cbr \/\u003E    android:id=\"@+id\/activity_main\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:paddingBottom=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    android:paddingLeft=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingRight=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingTop=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    tools:context=\"info.devexchanges.multiplerecyclerview.MainActivity\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;LinearLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:orientation=\"vertical\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:gravity=\"center_vertical\"\u003Cbr \/\u003E            android:paddingBottom=\"10dp\"\u003Cbr \/\u003E            android:text=\"Asia\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E            android:id=\"@+id\/recycler\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_marginTop=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E            android:gravity=\"center_vertical\"\u003Cbr \/\u003E            android:paddingBottom=\"10dp\"\u003Cbr \/\u003E            android:text=\"Europe\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E            android:id=\"@+id\/recycler_1\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/LinearLayout\u0026gt;\u003Cbr \/\u003E\u0026lt;\/android.support.v4.widget.NestedScrollView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; And this is layout for each \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E item: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eitem_recycler_view.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:layout_marginBottom=\"8dp\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;ImageView\u003Cbr \/\u003E            android:id=\"@+id\/image\"\u003Cbr \/\u003E            android:layout_width=\"80dp\"\u003Cbr \/\u003E            android:layout_height=\"80dp\"\u003Cbr \/\u003E            android:src=\"@drawable\/world\"\u003Cbr \/\u003E            android:contentDescription=\"@null\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:id=\"@+id\/text\"\u003Cbr \/\u003E            android:textColor=\"@color\/colorPrimary\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:textStyle=\"bold\"\u003Cbr \/\u003E            android:layout_centerVertical=\"true\"\u003Cbr \/\u003E            android:layout_toRightOf=\"@+id\/image\"\u003Cbr \/\u003E            android:layout_toEndOf=\"@+id\/image\"\u003Cbr \/\u003E            android:padding=\"10dp\"\u003Cbr \/\u003E            android:text=\"@string\/app_name\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u0026lt;\/android.support.v7.widget.CardView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: #cc0000;\"\u003ENOTE\u003C\/span\u003E\u003C\/b\u003E\u003C\/code\u003E: In order to use \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ECardView\u003C\/code\u003E and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ENestedScrollView\u003C\/code\u003E from Design Support Library, you must add these dependencies to your app level \u003Cb\u003E\u003Ci\u003Ebuild.gradle\u003C\/i\u003E\u003C\/b\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Ecompile 'com.android.support:design:25.1.0'\u003Cbr \/\u003Ecompile 'com.android.support:recyclerview-v7:25.1.0'\u003Cbr \/\u003Ecompile 'com.android.support:cardview-v7:25.1.0'\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ESet LayoutManager and data in programmatically code\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Back to your main activity programmatically code, there is no special thing here, please set \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ELayoutManager\u003C\/code\u003E for each \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E (here is \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ELinearLayoutManager\u003C\/code\u003E) and initializing data\/\"adapter\" for them: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EMainActivity.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.multiplerecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.support.v7.widget.LinearLayoutManager;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E    private String[] asiaCountries = {\"Vietnam\", \"China\", \"Japan\", \"Korea\", \"India\", \"Singapore\", \"Thailand\", \"Malaysia\"};\u003Cbr \/\u003E    private String[] europeCountries = {\"France\", \"Germany\", \"Sweden\", \"Denmark\", \"England\", \"Spain\", \"Portugal\", \"Norway\"};\u003Cbr \/\u003E\u003Cbr \/\u003E    private RecyclerView firstRecyclerView;\u003Cbr \/\u003E    private RecyclerView secondRecyclerView;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E\u003Cbr \/\u003E        firstRecyclerView = (RecyclerView)findViewById(R.id.recycler);\u003Cbr \/\u003E        secondRecyclerView = (RecyclerView)findViewById(R.id.recycler_1);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/create and set layout manager for each RecyclerView\u003Cbr \/\u003E        RecyclerView.LayoutManager firstLayoutManager = new LinearLayoutManager(this);\u003Cbr \/\u003E        RecyclerView.LayoutManager secondLayoutManager = new LinearLayoutManager(this);\u003Cbr \/\u003E\u003Cbr \/\u003E        firstRecyclerView.setLayoutManager(firstLayoutManager);\u003Cbr \/\u003E        secondRecyclerView.setLayoutManager(secondLayoutManager);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/Initializing and set adapter for each RecyclerView\u003Cbr \/\u003E        RecyclerViewAdapter firstAdapter = new RecyclerViewAdapter(this, asiaCountries);\u003Cbr \/\u003E        RecyclerViewAdapter secondAdapter = new RecyclerViewAdapter(this, europeCountries);\u003Cbr \/\u003E\u003Cbr \/\u003E        firstRecyclerView.setAdapter(firstAdapter);\u003Cbr \/\u003E        secondRecyclerView.setAdapter(secondAdapter);\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; And this is the sample \"adapter\" class for these \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerViews\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003ERecyclerViewAdapter.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.multiplerecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Activity;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class RecyclerViewAdapter extends RecyclerView.Adapter\u0026lt;RecyclerViewAdapter.ViewHolder\u0026gt; {\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E    private String[] strings;\u003Cbr \/\u003E\u003Cbr \/\u003E    public RecyclerViewAdapter(Activity activity, String[] strings) {\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E        this.strings = strings;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\u003Cbr \/\u003E        LayoutInflater inflater = activity.getLayoutInflater();\u003Cbr \/\u003E        View view = inflater.inflate(R.layout.item_recycler_view, parent, false);\u003Cbr \/\u003E\u003Cbr \/\u003E        return new ViewHolder(view);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(ViewHolder viewHolder, final int position) {\u003Cbr \/\u003E        viewHolder.textView.setText(strings[position]);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return strings.length;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    class ViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        private TextView textView;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            textView = (TextView) view.findViewById(R.id.text);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ERunning the project\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; This is output of this sample project, you can see that I've build 2 list views into a single screen successful: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/jwTEh5D.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/jwTEh5D.gif\" height=\"640\" width=\"360\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFinal thought\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; As you can see, with simple configuration in the activity layout file, you now can put make a screen which contains multiple list views by using \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerViews\u003C\/code\u003E. Further, please check other posts about this widget on my blog: \u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003ECombining \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2016\/11\/combining-grid-view-and-list-view-in.html\" target=\"_blank\"\u003Elist view and grid view\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E in a single screen (by \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E)\u003C\/li\u003E\u003Cli\u003EBuild \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2016\/06\/building-list-and-grid-layout-with.html\" target=\"_blank\"\u003Elist and grid layout\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E by\u0026nbsp;\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E (explicit explanation)\u003C\/li\u003E\u003Cli\u003EAll posts about\u0026nbsp;\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 3px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E: visit this \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/search\/label\/recyclerview?max-results=6\" target=\"_blank\"\u003ETAG link\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/viid.me\/qua8j2\" target=\"_blank\"\u003EDOWNLOAD SAMPLE CODE\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/5725054422995325232\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2017\/01\/populating-multiple-list-views-on.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/5725054422995325232"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/5725054422995325232"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2017\/01\/populating-multiple-list-views-on.html","title":"Populating multiple list views on a single Activity by using RecyclerView in Android"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-8257482202271786668"},"published":{"$t":"2016-11-09T16:15:00.000+07:00"},"updated":{"$t":"2016-11-10T08:18:56.519+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"cardview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"gridview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"listview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"recyclerview"}],"title":{"type":"text","$t":"Combining grid view and list view on a screen by using RecyclerViews Android"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; As you can read at my \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2015\/03\/combining-gridview-and-listview-in-one.html\" target=\"_blank\"\u003Eprevious post\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E, if you use \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EGridView\u003C\/code\u003E to build a grid layout and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E to make a list layout in Android, putting these 2 widgets into a single screen is not easy, my solution is making a custom \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EGridView\u003C\/code\u003E which expanding it's full height and set it as the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E's header later.  \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; But now, Google has released \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E - the successor of 2 old widgets (\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EGridView\u003C\/code\u003E), we can build this design easily because of it's own scroll and reuse mechanism. \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Now, take a few time to read some important steps in this \"combining work\"! \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/MAPP5GPl.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/MAPP5GPl.png\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EDeclaring Activity layout\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Firstly, you only need to put 2 \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerViews\u003C\/code\u003E object to your activity\/fragment layout. For better scroll later, please wrap theme in a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ENestedScrollView\u003C\/code\u003E like this: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactiity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.v4.widget.NestedScrollView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\u003Cbr \/\u003E    android:id=\"@+id\/activity_main\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:paddingBottom=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    android:paddingLeft=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingRight=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingTop=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    android:background=\"#ffffe0\"\u003Cbr \/\u003E    tools:context=\"info.devexchanges.gridlistrecyclerview.MainActivity\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;LinearLayout\u003Cbr \/\u003E        android:orientation=\"vertical\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:paddingBottom=\"10dp\"\u003Cbr \/\u003E            android:text=\"@string\/os\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E            android:id=\"@+id\/grid\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:paddingBottom=\"10dp\"\u003Cbr \/\u003E            android:paddingTop=\"10dp\"\u003Cbr \/\u003E            android:text=\"@string\/corporation\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E            android:id=\"@+id\/list\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/LinearLayout\u0026gt;\u003Cbr \/\u003E\u0026lt;\/android.support.v4.widget.NestedScrollView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EProviding custom layouts for grid\/list row\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Of course, you always need to creating layout for each \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E item. In this project, every item is a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ECardView\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eitem_list.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:layout_marginBottom=\"8dp\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;ImageView\u003Cbr \/\u003E            android:id=\"@+id\/image\"\u003Cbr \/\u003E            android:layout_width=\"60dp\"\u003Cbr \/\u003E            android:layout_height=\"60dp\"\u003Cbr \/\u003E            android:layout_marginLeft=\"5dp\"\u003Cbr \/\u003E            android:contentDescription=\"@string\/app_name\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:id=\"@+id\/text\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_centerInParent=\"true\"\u003Cbr \/\u003E            android:layout_toRightOf=\"@+id\/image\"\u003Cbr \/\u003E            android:gravity=\"center\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u0026lt;\/android.support.v7.widget.CardView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eitem_grid.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:layout_margin=\"5dp\"\u003Cbr \/\u003E    app:cardCornerRadius=\"10dp\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_gravity=\"center\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;ImageView\u003Cbr \/\u003E            android:id=\"@+id\/image\"\u003Cbr \/\u003E            android:layout_width=\"120dp\"\u003Cbr \/\u003E            android:layout_height=\"120dp\"\u003Cbr \/\u003E            android:layout_centerHorizontal=\"true\"\u003Cbr \/\u003E            android:layout_marginTop=\"5dp\"\u003Cbr \/\u003E            android:contentDescription=\"@null\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:id=\"@+id\/text\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_below=\"@+id\/image\"\u003Cbr \/\u003E            android:layout_marginTop=\"5dp\"\u003Cbr \/\u003E            android:background=\"@color\/colorPrimaryDark\"\u003Cbr \/\u003E            android:gravity=\"center\"\u003Cbr \/\u003E            android:padding=\"5dp\"\u003Cbr \/\u003E            android:textColor=\"#ffffff\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u0026lt;\/android.support.v7.widget.CardView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ECreating adapter classes\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Now, we must create 2 adapter classes for 2 \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerViews\u003C\/code\u003E based on \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView.Adapter\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EListViewAdapter.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.gridlistrecyclerview.adapter;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Activity;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.ImageView;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport info.devexchanges.gridlistrecyclerview.R;\u003Cbr \/\u003Eimport info.devexchanges.gridlistrecyclerview.RecyclerViewItem;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class ListViewAdapter extends RecyclerView.Adapter\u0026lt;ListViewAdapter.ViewHolder\u0026gt; {\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E    private List\u0026lt;RecyclerViewItem\u0026gt; items;\u003Cbr \/\u003E\u003Cbr \/\u003E    public ListViewAdapter(Activity activity, List\u0026lt;RecyclerViewItem\u0026gt; items) {\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E        this.items = items;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\u003Cbr \/\u003E        LayoutInflater inflater = activity.getLayoutInflater();\u003Cbr \/\u003E        View view = inflater.inflate(R.layout.item_list, parent, false);\u003Cbr \/\u003E\u003Cbr \/\u003E        return new ViewHolder(view);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(ViewHolder viewHolder, final int position) {\u003Cbr \/\u003E        viewHolder.imageView.setImageResource(items.get(position).getDrawableId());\u003Cbr \/\u003E        viewHolder.textView.setText(items.get(position).getName());\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return items.size();\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    \/**\u003Cbr \/\u003E     * View holder to display each RecylerView item\u003Cbr \/\u003E     *\/\u003Cbr \/\u003E    protected class ViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        private ImageView imageView;\u003Cbr \/\u003E        private TextView textView;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            imageView = (ImageView) view.findViewById(R.id.image);\u003Cbr \/\u003E            textView = (TextView)view.findViewById(R.id.text);\u003Cbr \/\u003E        }\u003Cbr \/\u003E\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EGridViewAdapter.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.gridlistrecyclerview.adapter;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Activity;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.ImageView;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport info.devexchanges.gridlistrecyclerview.R;\u003Cbr \/\u003Eimport info.devexchanges.gridlistrecyclerview.RecyclerViewItem;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class GridViewAdapter extends RecyclerView.Adapter\u0026lt;GridViewAdapter.ViewHolder\u0026gt; {\u003Cbr \/\u003E    private List\u0026lt;RecyclerViewItem\u0026gt; items;\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E\u003Cbr \/\u003E    public GridViewAdapter(Activity activity, List\u0026lt;RecyclerViewItem\u0026gt; items) {\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E        this.items = items;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {\u003Cbr \/\u003E        LayoutInflater inflater = activity.getLayoutInflater();\u003Cbr \/\u003E        View view = inflater.inflate(R.layout.item_grid, viewGroup, false);\u003Cbr \/\u003E\u003Cbr \/\u003E        return new ViewHolder(view);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(GridViewAdapter.ViewHolder viewHolder, int position) {\u003Cbr \/\u003E        viewHolder.imageView.setImageResource(items.get(position).getDrawableId());\u003Cbr \/\u003E        viewHolder.textView.setText(items.get(position).getName());\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return items.size();\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    \/**\u003Cbr \/\u003E     * View holder to display each RecylerView item\u003Cbr \/\u003E     *\/\u003Cbr \/\u003E    protected class ViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        private ImageView imageView;\u003Cbr \/\u003E        private TextView textView;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            textView = (TextView)view.findViewById(R.id.text);\u003Cbr \/\u003E            imageView = (ImageView) view.findViewById(R.id.image);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConfiguration in Activity\/Fragment\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; There is no special point in your activity or fragment programmatically code, locating all xml elements from layout file, create \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ELayoutManager\u003C\/code\u003E for \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerViews\u003C\/code\u003E, initializing adapters and attaching them,...This is full code for my main activity: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EMainActivity.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.gridlistrecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.support.v7.widget.GridLayoutManager;\u003Cbr \/\u003Eimport android.support.v7.widget.LinearLayoutManager;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.ArrayList;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport info.devexchanges.gridlistrecyclerview.adapter.GridViewAdapter;\u003Cbr \/\u003Eimport info.devexchanges.gridlistrecyclerview.adapter.ListViewAdapter;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E    private RecyclerView listView;\u003Cbr \/\u003E    private RecyclerView gridView;\u003Cbr \/\u003E    private ListViewAdapter listViewAdapter;\u003Cbr \/\u003E    private GridViewAdapter gridViewAdapter;\u003Cbr \/\u003E    private ArrayList\u0026lt;RecyclerViewItem\u0026gt; corporations;\u003Cbr \/\u003E    private ArrayList\u0026lt;RecyclerViewItem\u0026gt; operatingSystems;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E\u003Cbr \/\u003E        listView = (RecyclerView) findViewById(R.id.list);\u003Cbr \/\u003E        gridView = (RecyclerView) findViewById(R.id.grid);\u003Cbr \/\u003E\u003Cbr \/\u003E        setDummyData();\u003Cbr \/\u003E\u003Cbr \/\u003E        listView.setHasFixedSize(true);\u003Cbr \/\u003E        gridView.setHasFixedSize(true);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/set layout manager and adapter for \"ListView\"\u003Cbr \/\u003E        LinearLayoutManager horizontalManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);\u003Cbr \/\u003E        listView.setLayoutManager(horizontalManager);\u003Cbr \/\u003E        listViewAdapter = new ListViewAdapter(this, corporations);\u003Cbr \/\u003E        listView.setAdapter(listViewAdapter);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/set layout manager and adapter for \"GridView\"\u003Cbr \/\u003E        GridLayoutManager layoutManager = new GridLayoutManager(this, 2);\u003Cbr \/\u003E        gridView.setLayoutManager(layoutManager);\u003Cbr \/\u003E        gridViewAdapter = new GridViewAdapter(this, operatingSystems);\u003Cbr \/\u003E        gridView.setAdapter(gridViewAdapter);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void setDummyData() {\u003Cbr \/\u003E        corporations = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E        corporations.add(new RecyclerViewItem(R.drawable.microsoft, \"Microsoft\"));\u003Cbr \/\u003E        corporations.add(new RecyclerViewItem(R.drawable.apple, \"Apple\"));\u003Cbr \/\u003E        corporations.add(new RecyclerViewItem(R.drawable.google, \"Google\"));\u003Cbr \/\u003E        corporations.add(new RecyclerViewItem(R.drawable.oracle, \"Oracle\"));\u003Cbr \/\u003E        corporations.add(new RecyclerViewItem(R.drawable.yahoo, \"Yahoo\"));\u003Cbr \/\u003E        corporations.add(new RecyclerViewItem(R.drawable.mozilla, \"Mozilla\"));\u003Cbr \/\u003E\u003Cbr \/\u003E        operatingSystems = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.bbos, \"BlackBerry OS\"));\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.ios, \"iOS\"));\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.tizen, \"Tizen\"));\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.android, \"Android\"));\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.symbian, \"Symbian\"));\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.firefox_os, \"Firefox OS\"));\u003Cbr \/\u003E        operatingSystems.add(new RecyclerViewItem(R.drawable.wp_os, \"Windows Phone OS\"));\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003EAnd this is the POJO class of this project: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003ERecyclerViewItem.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.gridlistrecyclerview;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class RecyclerViewItem {\u003Cbr \/\u003E\u003Cbr \/\u003E    private int drawableId;\u003Cbr \/\u003E    private String name;\u003Cbr \/\u003E\u003Cbr \/\u003E    public RecyclerViewItem(int drawableId, String name) {\u003Cbr \/\u003E        this.drawableId = drawableId;\u003Cbr \/\u003E        this.name = name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public int getDrawableId() {\u003Cbr \/\u003E        return drawableId;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getName() {\u003Cbr \/\u003E        return name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: #cc0000;\"\u003ENOTE\u003C\/span\u003E\u003C\/b\u003E\u003C\/code\u003E: Never forget to put \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ECardView\u003C\/code\u003E dependencies to your app-level \u003Cb\u003E\u003Ci\u003Ebuild.gradle\u003C\/i\u003E\u003C\/b\u003E file: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Ecompile 'com.android.support:recyclerview-v7:25.0.0'\u003Cbr \/\u003Ecompile 'com.android.support:cardview-v7:25.0.0'\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ERunning application\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; You'll have this output after complete this project: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/9E1pVsG.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/9E1pVsG.gif\" height=\"400\" width=\"225\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConclusions\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; As you can see on the code above, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E can be put in \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EScrollView\u003C\/code\u003E or \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ENestedScrollView\u003C\/code\u003E, which \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\/GridView\u003C\/code\u003E cannot do. During work, as a Android developer, you should pay attention to the \u003Ci\u003Eupdate features from Google\u003C\/i\u003E to deal with the topic that problematic formerly. Through this post, I hope you can understand more about using \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E in building list interface. Finally, you can take full code be click the button below! \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/sh.st\/9wXDN\" target=\"_blank\"\u003EView Project on Github\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/8257482202271786668\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/11\/combining-grid-view-and-list-view-in.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/8257482202271786668"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/8257482202271786668"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/11\/combining-grid-view-and-list-view-in.html","title":"Combining grid view and list view on a screen by using RecyclerViews Android"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-2484353432100110388"},"published":{"$t":"2016-11-07T22:43:00.000+07:00"},"updated":{"$t":"2017-02-07T11:54:58.849+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"cardview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"library"},{"scheme":"http://www.blogger.com/atom/ns#","term":"material design"},{"scheme":"http://www.blogger.com/atom/ns#","term":"StackView"}],"title":{"type":"text","$t":"Cards stack like Tinder application in Android"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; Card stack is an exciting UI in mobile development, it provides an intuitive view of the \"paper stack\". There are a lot of applications in Google Play have this design, \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.tinder\" target=\"_blank\"\u003ETinder\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E is a typical example.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; In Android, each card stack element will be created by using \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ECardView\u003C\/code\u003E - a class from Design Support Library - but in order to make whole view look like a stack, we must use a third-party library which provide a custom view to hold data and\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Through this post, I would like to present a library called \u003Cb\u003E\u003Ca href=\"https:\/\/github.com\/flschweiger\/SwipeStack\" target=\"_blank\"\u003ESwipeStack\u003C\/a\u003E\u003C\/b\u003E which developed by \u003Ca href=\"http:\/\/frederik.link\/\" target=\"_blank\"\u003EFrederik Schweiger\u003C\/a\u003E. It's can help us to build a swipe cards stack easily through some simple steps.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u003Cb\u003E\u003Cspan style=\"color: #274e13;\"\u003EDEMO VIDEO\u003C\/span\u003E\u003C\/b\u003E:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i9.ytimg.com\/vi\/nhP956s6C-0\/default.jpg?sqp=CJipgsEF\u0026amp;rs=AOn4CLDQFubv35HFU-L1JwAnkcneuGhFWg\" frameborder=\"0\" height=\"333\" src=\"https:\/\/www.youtube.com\/embed\/nhP956s6C-0?feature=player_embedded\" width=\"400\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EImport library to Android Studio Project\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The simplest way to use this library is add this dependency to \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003Edependencies\u003C\/code\u003E scope of your app-level \u003Cb\u003E\u003Ci\u003Ebuild.gradle\u003C\/i\u003E\u003C\/b\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Ecompile 'link.fls:swipestack:0.3.0'\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EDeclaring in Activity\/Fragment layout\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The class used to make cards stack layout is \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ESwipeStack\u003C\/code\u003E, you must put an instance to your activity\/fragment layout (xml) file like this: \u003Cbr \/\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:orientation=\"vertical\"\u003Cbr \/\u003E    android:paddingBottom=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    android:paddingLeft=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingRight=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E    android:paddingTop=\"@dimen\/activity_vertical_margin\"\u003Cbr \/\u003E    android:weightSum=\"1\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;link.fls.swipestack.SwipeStack\u003Cbr \/\u003E        android:id=\"@+id\/container\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"500dp\"\u003Cbr \/\u003E        app:stack_rotation=\"0\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_alignParentBottom=\"true\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:id=\"@+id\/empty\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_centerInParent=\"true\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;ImageView\u003Cbr \/\u003E            android:id=\"@+id\/love\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_centerInParent=\"true\"\u003Cbr \/\u003E            android:layout_marginLeft=\"10dp\"\u003Cbr \/\u003E            android:layout_toRightOf=\"@id\/empty\"\u003Cbr \/\u003E            android:contentDescription=\"@null\"\u003Cbr \/\u003E            android:src=\"@drawable\/love\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;ImageView\u003Cbr \/\u003E            android:id=\"@+id\/cancel\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_centerInParent=\"true\"\u003Cbr \/\u003E            android:layout_marginRight=\"10dp\"\u003Cbr \/\u003E            android:layout_toLeftOf=\"@id\/empty\"\u003Cbr \/\u003E            android:contentDescription=\"@null\"\u003Cbr \/\u003E            android:src=\"@drawable\/cancel\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; For more customizing XML attributes (like \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003Estack_rotation\u003C\/code\u003E, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003Eswipe_rotation\u003C\/code\u003E,...) of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ESwipeStack\u003C\/code\u003E, please view \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"https:\/\/github.com\/flschweiger\/SwipeStack#attributes\" target=\"_blank\"\u003Ethis entry\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E of it's library page. \u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ECreating an adapter class\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ESwipeStack\u003C\/code\u003E work like a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E, so you must make an adapter class (based on \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EBaseAdapter\u003C\/code\u003E) which holds the data and creates the views for the stack. In this sample project, I will load a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EBitmap\u003C\/code\u003E to each stack element so I use \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EdecodeSampledBitmapFromResource()\u003C\/code\u003E method to scaled down version to memory, avoid \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EOutOfMemory\u003C\/code\u003E error.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Source code of this adapter class: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003ECardsAdapter.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.cardsstack;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Activity;\u003Cbr \/\u003Eimport android.content.res.Resources;\u003Cbr \/\u003Eimport android.graphics.Bitmap;\u003Cbr \/\u003Eimport android.graphics.BitmapFactory;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.BaseAdapter;\u003Cbr \/\u003Eimport android.widget.ImageView;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class CardsAdapter extends BaseAdapter {\u003Cbr \/\u003E\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E    private final static int AVATAR_WIDTH = 150;\u003Cbr \/\u003E    private final static int AVATAR_HEIGHT = 300;\u003Cbr \/\u003E    private List\u0026lt;CardItem\u0026gt; data;\u003Cbr \/\u003E\u003Cbr \/\u003E    public CardsAdapter(Activity activity, List\u0026lt;CardItem\u0026gt; data) {\u003Cbr \/\u003E        this.data = data;\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getCount() {\u003Cbr \/\u003E        return data.size();\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public CardItem getItem(int position) {\u003Cbr \/\u003E        return data.get(position);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public long getItemId(int position) {\u003Cbr \/\u003E        return position;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public View getView(final int position, View convertView, ViewGroup parent) {\u003Cbr \/\u003E        ViewHolder holder;\u003Cbr \/\u003E        LayoutInflater inflater = (LayoutInflater) activity.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\u003Cbr \/\u003E        \/\/ If holder not exist then locate all view from UI file.\u003Cbr \/\u003E        if (convertView == null) {\u003Cbr \/\u003E            \/\/ inflate UI from XML file\u003Cbr \/\u003E            convertView = inflater.inflate(R.layout.item_card, parent, false);\u003Cbr \/\u003E            \/\/ get all UI view\u003Cbr \/\u003E            holder = new ViewHolder(convertView);\u003Cbr \/\u003E            \/\/ set tag for holder\u003Cbr \/\u003E            convertView.setTag(holder);\u003Cbr \/\u003E        } else {\u003Cbr \/\u003E            \/\/ if holder created, get tag from view\u003Cbr \/\u003E            holder = (ViewHolder) convertView.getTag();\u003Cbr \/\u003E        }\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/setting data to views\u003Cbr \/\u003E        holder.name.setText(getItem(position).getName());\u003Cbr \/\u003E        holder.location.setText(getItem(position).getLocation());\u003Cbr \/\u003E        holder.avatar.setImageBitmap(decodeSampledBitmapFromResource(activity.getResources(),\u003Cbr \/\u003E                getItem(position).getDrawableId(), AVATAR_WIDTH, AVATAR_HEIGHT));\u003Cbr \/\u003E\u003Cbr \/\u003E        return convertView;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private class ViewHolder{\u003Cbr \/\u003E        private ImageView avatar;\u003Cbr \/\u003E        private TextView name;\u003Cbr \/\u003E        private TextView location;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ViewHolder(View view) {\u003Cbr \/\u003E            avatar = (ImageView)view.findViewById(R.id.avatar);\u003Cbr \/\u003E            name = (TextView)view.findViewById(R.id.name);\u003Cbr \/\u003E            location = (TextView)view.findViewById(R.id.location);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public static Bitmap decodeSampledBitmapFromResource(Resources res, int resId, int reqWidth, int reqHeight) {\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/ First decode with inJustDecodeBounds=true to check dimensions\u003Cbr \/\u003E        final BitmapFactory.Options options = new BitmapFactory.Options();\u003Cbr \/\u003E        options.inJustDecodeBounds = true;\u003Cbr \/\u003E        BitmapFactory.decodeResource(res, resId, options);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/ Calculate inSampleSize\u003Cbr \/\u003E        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/ Decode bitmap with inSampleSize set\u003Cbr \/\u003E        options.inJustDecodeBounds = false;\u003Cbr \/\u003E        return BitmapFactory.decodeResource(res, resId, options);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {\u003Cbr \/\u003E        \/\/ Raw height and width of image\u003Cbr \/\u003E        final int height = options.outHeight;\u003Cbr \/\u003E        final int width = options.outWidth;\u003Cbr \/\u003E        int inSampleSize = 1;\u003Cbr \/\u003E\u003Cbr \/\u003E        if (height \u0026gt; reqHeight || width \u0026gt; reqWidth) {\u003Cbr \/\u003E\u003Cbr \/\u003E            final int halfHeight = height \/ 2;\u003Cbr \/\u003E            final int halfWidth = width \/ 2;\u003Cbr \/\u003E\u003Cbr \/\u003E            \/\/ Calculate the largest inSampleSize value that is a power of 2 and keeps both\u003Cbr \/\u003E            \/\/ height and width larger than the requested height and width.\u003Cbr \/\u003E            while ((halfHeight \/ inSampleSize) \u0026gt;= reqHeight\u003Cbr \/\u003E                    \u0026amp;\u0026amp; (halfWidth \/ inSampleSize) \u0026gt;= reqWidth) {\u003Cbr \/\u003E                inSampleSize *= 2;\u003Cbr \/\u003E            }\u003Cbr \/\u003E        }\u003Cbr \/\u003E\u003Cbr \/\u003E        return inSampleSize;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConfiguration in Activity\/Fragment java code\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; We've done the most important work: building an adapter class for \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ESwipeStack\u003C\/code\u003E. Now, paying attention to some of it's necessary methods: \u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EHandling swipe event of Cards stack by use \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EsetListener(SwipeStackListener())\u003C\/code\u003E method and overriding 3 methods \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EonStackEmpty()\u003C\/code\u003E, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EonViewSwipedToLeft()\u003C\/code\u003E, \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EonViewSwipedToRight()\u003C\/code\u003E of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ESwipeStack.SwipeStackListener\u003C\/code\u003E interface.\u003C\/li\u003E\u003Cli\u003E\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EswipeTopViewToRight()\u003C\/code\u003E\/\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EswipeTopViewToLeft()\u003C\/code\u003E: programmatically dismiss the top view to the right\/left.\u003C\/li\u003E\u003Cli\u003E\u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EresetStack()\u003C\/code\u003E: Resets the current adapter position and repopulates the stack.\u003C\/li\u003E\u003C\/ul\u003E\u0026nbsp; \u0026nbsp; Source code for the activity: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EMainActivity.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.cardsstack;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.view.Menu;\u003Cbr \/\u003Eimport android.view.MenuItem;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.widget.Toast;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.ArrayList;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport link.fls.swipestack.SwipeStack;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E    private SwipeStack cardStack;\u003Cbr \/\u003E    private CardsAdapter cardsAdapter;\u003Cbr \/\u003E    private ArrayList\u0026lt;CardItem\u0026gt; cardItems;\u003Cbr \/\u003E    private View btnCancel;\u003Cbr \/\u003E    private View btnLove;\u003Cbr \/\u003E    private int currentPosition;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E\u003Cbr \/\u003E        cardStack = (SwipeStack) findViewById(R.id.container);\u003Cbr \/\u003E        btnCancel = findViewById(R.id.cancel);\u003Cbr \/\u003E        btnLove = findViewById(R.id.love);\u003Cbr \/\u003E\u003Cbr \/\u003E        setCardStackAdapter();\u003Cbr \/\u003E        currentPosition = 0;\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/Handling swipe event of Cards stack\u003Cbr \/\u003E        cardStack.setListener(new SwipeStack.SwipeStackListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onViewSwipedToLeft(int position) {\u003Cbr \/\u003E                currentPosition = position + 1;\u003Cbr \/\u003E            }\u003Cbr \/\u003E\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onViewSwipedToRight(int position) {\u003Cbr \/\u003E                currentPosition = position + 1;\u003Cbr \/\u003E            }\u003Cbr \/\u003E\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onStackEmpty() {\u003Cbr \/\u003E\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E\u003Cbr \/\u003E        btnCancel.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View view) {\u003Cbr \/\u003E                cardStack.swipeTopViewToRight();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E\u003Cbr \/\u003E        btnLove.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View view) {\u003Cbr \/\u003E                Toast.makeText(MainActivity.this, \"You liked \" + cardItems.get(currentPosition).getName(),\u003Cbr \/\u003E                        Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E                cardStack.swipeTopViewToLeft();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void setCardStackAdapter() {\u003Cbr \/\u003E        cardItems = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.a, \"Huyen My\", \"Hanoi\"));\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.f, \"Do Ha\", \"Nghe An\"));\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.g, \"Dong Nhi\", \"Hue\"));\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.e, \"Le Quyen\", \"Sai Gon\"));\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.c, \"Phuong Linh\", \"Thanh Hoa\"));\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.d, \"Phuong Vy\", \"Hanoi\"));\u003Cbr \/\u003E        cardItems.add(new CardItem(R.drawable.b, \"Ha Ho\", \"Da Nang\"));\u003Cbr \/\u003E\u003Cbr \/\u003E        cardsAdapter = new CardsAdapter(this, cardItems);\u003Cbr \/\u003E        cardStack.setAdapter(cardsAdapter);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public boolean onCreateOptionsMenu(Menu menu) {\u003Cbr \/\u003E        getMenuInflater().inflate(R.menu.menu_main, menu);\u003Cbr \/\u003E        return true;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public boolean onOptionsItemSelected(MenuItem item) {\u003Cbr \/\u003E        if (item.getItemId() == R.id.reset) {\u003Cbr \/\u003E            cardStack.resetStack();\u003Cbr \/\u003E        }\u003Cbr \/\u003E        return super.onOptionsItemSelected(item);\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ESome necessary files\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The POJO class of project, the model of a stack view element: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003ECardItem.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.cardsstack;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class CardItem {\u003Cbr \/\u003E\u003Cbr \/\u003E    private int drawableId;\u003Cbr \/\u003E    private String name;\u003Cbr \/\u003E    private String location;\u003Cbr \/\u003E\u003Cbr \/\u003E    public CardItem(int drawableId, String name, String location) {\u003Cbr \/\u003E        this.drawableId = drawableId;\u003Cbr \/\u003E        this.name = name;\u003Cbr \/\u003E        this.location = location;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public int getDrawableId() {\u003Cbr \/\u003E        return drawableId;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public void setDrawableId(int drawableId) {\u003Cbr \/\u003E        this.drawableId = drawableId;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getName() {\u003Cbr \/\u003E        return name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public void setName(String name) {\u003Cbr \/\u003E        this.name = name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getLocation() {\u003Cbr \/\u003E        return location;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The menu file, containing a label to reset data of the stack: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eres\/menu\/menu_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-xml\"\u003E\u0026lt;menu xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\u003Cbr \/\u003E    tools:context=\".MyActivity\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;item\u003Cbr \/\u003E        android:id=\"@+id\/reset\"\u003Cbr \/\u003E        android:title=\"Reset\"\u003Cbr \/\u003E        app:showAsAction=\"always\" \/\u0026gt;\u003Cbr \/\u003E\u0026lt;\/menu\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Running this application, you'll have this output: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/dvsa9Od.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/dvsa9Od.gif\" height=\"400\" width=\"225\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConclusions\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Up to now, you may realized that we are able to make a cards stack with swipe animation like Tinder application easily by using a third-party library. By searching on the Internet, you may find out a lot similar libraries:\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/aaronbond\/Swipe-Deck\"\u003Ehttps:\/\/github.com\/aaronbond\/Swipe-Deck\u003C\/a\u003E\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/wenchaojiang\/AndroidSwipeableCardStack\"\u003Ehttps:\/\/github.com\/wenchaojiang\/AndroidSwipeableCardStack\u003C\/a\u003E\u003C\/li\u003E\u003C\/ul\u003E\u0026nbsp; \u0026nbsp; Finally, for more details, please go to the library page on \u003Cb\u003E\u003Ca href=\"https:\/\/github.com\/flschweiger\/SwipeStack\" target=\"_blank\"\u003E@Github\u003C\/a\u003E\u003C\/b\u003E to read it's document and post your issues! \u003Cbr \/\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/sh.st\/8gh62\" target=\"_blank\"\u003EDOWNLOAD CODE\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/2484353432100110388\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/11\/cards-stack-like-tinder-application-in.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/2484353432100110388"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/2484353432100110388"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/11\/cards-stack-like-tinder-application-in.html","title":"Cards stack like Tinder application in Android"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/nhP956s6C-0\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-2961667893821063219"},"published":{"$t":"2016-10-21T16:09:00.000+07:00"},"updated":{"$t":"2016-10-21T19:41:41.283+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Android UI"},{"scheme":"http://www.blogger.com/atom/ns#","term":"cardview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"recyclerview"}],"title":{"type":"text","$t":"Adding Header and Footer layouts for RecyclerView in Android"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; As you can see at \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003E\u003Ca href=\"https:\/\/android.googlesource.com\/platform\/frameworks\/support\/+\/refs\/heads\/master\/v7\/recyclerview\/src\/android\/support\/v7\/widget\/RecyclerView.java\" target=\"_blank\"\u003ERecyclerView\u003C\/a\u003E\u003C\/code\u003E class source code, it's a subclass of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EViewGroup\u003C\/code\u003E and implements \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EScrollingView\u003C\/code\u003E and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ENestedScrollingChild\u003C\/code\u003E interfaces. It mean that the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E\u0026nbsp;structure is not like \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E or \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EGridView\u003C\/code\u003E\u0026nbsp;(which is sub-classes of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EAdapterView\u003C\/code\u003E), it is a list view without the first and last points. \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Therefore, adding header\/footer view to \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E is not simple like the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E (by calling \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EaddHeaderView(View v)\u003C\/code\u003E or \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EaddFooterView(View v)\u003C\/code\u003E methods).\u0026nbsp;To accomplish this, we must use a custom way.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Through this post, I'll provide a solution to add the header\/footer layout by determine the property of header, footer and list item in the adapter class, Accordingly, we will inflate suitable layout for each view. For another ways, please keep search on Internet! \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u003Cb\u003E\u003Cspan style=\"color: #274e13;\"\u003EDEMO VIDEO\u003C\/span\u003E\u003C\/b\u003E:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/xTVhtf6To4o\/0.jpg\" frameborder=\"0\" height=\"333\" src=\"https:\/\/www.youtube.com\/embed\/xTVhtf6To4o?feature=player_embedded\" width=\"400\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EDeclaring layouts for item\/header\/footer views\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The first work is you must have 3 separated layouts for 3 view types of the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Elayout_item.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:layout_marginBottom=\"6dp\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;TextView\u003Cbr \/\u003E        android:id=\"@+id\/recycler_item_text\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:gravity=\"center\"\u003Cbr \/\u003E        android:padding=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        android:text=\"Recycler View Item\"\u003Cbr \/\u003E        android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/android.support.v7.widget.CardView\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Elayout_footer.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:layout_marginTop=\"5dp\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;TextView\u003Cbr \/\u003E        android:id=\"@+id\/footer_text\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:background=\"@android:color\/holo_orange_dark\"\u003Cbr \/\u003E        android:gravity=\"center\"\u003Cbr \/\u003E        android:padding=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        android:text=\"Footer View\"\u003Cbr \/\u003E        android:textAllCaps=\"true\"\u003Cbr \/\u003E        android:textColor=\"@android:color\/white\"\u003Cbr \/\u003E        android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/LinearLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Elayout_header.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_marginBottom=\"10dp\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;TextView\u003Cbr \/\u003E        android:id=\"@+id\/header_text\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:background=\"@android:color\/holo_blue_dark\"\u003Cbr \/\u003E        android:gravity=\"center\"\u003Cbr \/\u003E        android:padding=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        android:text=\"Header View\"\u003Cbr \/\u003E        android:textAllCaps=\"true\"\u003Cbr \/\u003E        android:textColor=\"@android:color\/white\"\u003Cbr \/\u003E        android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/LinearLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConfiguration in adapter class\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Like other cases, we'll make a subclass of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView.Adapter\u003C\/code\u003E to custom an our own \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E adapter. Firstly, provide some static constants: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Eprivate static final int TYPE_HEADER = 0;\u003Cbr \/\u003Eprivate static final int TYPE_FOOTER = 1;\u003Cbr \/\u003Eprivate static final int TYPE_ITEM = 2;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; In \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EonCreateViewHolder()\u003C\/code\u003E method, create a \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EViewHolder\u003C\/code\u003E pattern and assign the layout to be shown based on the view type changes: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E    @Override\u003Cbr \/\u003E    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\u003Cbr \/\u003E        if (viewType == TYPE_ITEM) {\u003Cbr \/\u003E            \/\/Inflating recycle view item layout\u003Cbr \/\u003E            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_item, parent, false);\u003Cbr \/\u003E            return new ItemViewHolder(itemView);\u003Cbr \/\u003E        } else if (viewType == TYPE_HEADER) {\u003Cbr \/\u003E            \/\/Inflating header view\u003Cbr \/\u003E            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_header, parent, false);\u003Cbr \/\u003E            return new HeaderViewHolder(itemView);\u003Cbr \/\u003E        } else if (viewType == TYPE_FOOTER) {\u003Cbr \/\u003E            \/\/Inflating footer view\u003Cbr \/\u003E            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_footer, parent, false);\u003Cbr \/\u003E            return new FooterViewHolder(itemView);\u003Cbr \/\u003E        } else return null;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Most important, you must override \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EgetItemViewType()\u003C\/code\u003E to fix the header at zeroth position and footer at last position of the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E    @Override\u003Cbr \/\u003E    public int getItemViewType(int position) {\u003Cbr \/\u003E        if (position == 0) {\u003Cbr \/\u003E            return TYPE_HEADER;\u003Cbr \/\u003E        } else if (position == stringArrayList.size() + 1) {\u003Cbr \/\u003E            return TYPE_FOOTER;\u003Cbr \/\u003E        }\u003Cbr \/\u003E        return TYPE_ITEM;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Eventually add the total array count by 2 to represent view that the \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E has to be inflated with header and footer layouts, you must rewrite \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EgetItemCount()\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return stringArrayList.size() + 2;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Finally, the complete code of the adapter class would be like: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003ERecyclerViewAdapter.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.recyclerviewheaderfooter;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Activity;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.ListView;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003Eimport android.widget.Toast;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.ArrayList;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class RecyclerViewAdapter extends RecyclerView.Adapter\u0026lt;RecyclerView.ViewHolder\u0026gt; {\u003Cbr \/\u003E\u003Cbr \/\u003E    private static final int TYPE_HEADER = 0;\u003Cbr \/\u003E    private static final int TYPE_FOOTER = 1;\u003Cbr \/\u003E    private static final int TYPE_ITEM = 2;\u003Cbr \/\u003E\u003Cbr \/\u003E    private ArrayList\u0026lt;String\u0026gt; stringArrayList;\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E\u003Cbr \/\u003E    public RecyclerViewAdapter(Activity activity, ArrayList\u0026lt;String\u0026gt; strings) {\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E        this.stringArrayList = strings;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\u003Cbr \/\u003E        if (viewType == TYPE_ITEM) {\u003Cbr \/\u003E            \/\/Inflating recycle view item layout\u003Cbr \/\u003E            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_item, parent, false);\u003Cbr \/\u003E            return new ItemViewHolder(itemView);\u003Cbr \/\u003E        } else if (viewType == TYPE_HEADER) {\u003Cbr \/\u003E            \/\/Inflating header view\u003Cbr \/\u003E            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_header, parent, false);\u003Cbr \/\u003E            return new HeaderViewHolder(itemView);\u003Cbr \/\u003E        } else if (viewType == TYPE_FOOTER) {\u003Cbr \/\u003E            \/\/Inflating footer view\u003Cbr \/\u003E            View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_footer, parent, false);\u003Cbr \/\u003E            return new FooterViewHolder(itemView);\u003Cbr \/\u003E        } else return null;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(RecyclerView.ViewHolder holder, final int position) {\u003Cbr \/\u003E        if (holder instanceof HeaderViewHolder) {\u003Cbr \/\u003E            HeaderViewHolder headerHolder = (HeaderViewHolder) holder;\u003Cbr \/\u003E            headerHolder.headerTitle.setText(\"Header View\");\u003Cbr \/\u003E            headerHolder.headerTitle.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E                @Override\u003Cbr \/\u003E                public void onClick(View view) {\u003Cbr \/\u003E                    Toast.makeText(activity, \"You clicked at Header View!\", Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E                }\u003Cbr \/\u003E            });\u003Cbr \/\u003E        } else if (holder instanceof FooterViewHolder) {\u003Cbr \/\u003E            FooterViewHolder footerHolder = (FooterViewHolder) holder;\u003Cbr \/\u003E            footerHolder.footerText.setText(\"Footer View\");\u003Cbr \/\u003E            footerHolder.footerText.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E                @Override\u003Cbr \/\u003E                public void onClick(View view) {\u003Cbr \/\u003E                    Toast.makeText(activity, \"You clicked at Footer View\", Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E                }\u003Cbr \/\u003E            });\u003Cbr \/\u003E        } else if (holder instanceof ItemViewHolder) {\u003Cbr \/\u003E            ItemViewHolder itemViewHolder = (ItemViewHolder) holder;\u003Cbr \/\u003E            itemViewHolder.itemText.setText(\"Recycler Item \" + position);\u003Cbr \/\u003E            itemViewHolder.itemText.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E                @Override\u003Cbr \/\u003E                public void onClick(View view) {\u003Cbr \/\u003E                    Toast.makeText(activity, \"You clicked at item \" + position, Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E                }\u003Cbr \/\u003E            });\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemViewType(int position) {\u003Cbr \/\u003E        if (position == 0) {\u003Cbr \/\u003E            return TYPE_HEADER;\u003Cbr \/\u003E        } else if (position == stringArrayList.size() + 1) {\u003Cbr \/\u003E            return TYPE_FOOTER;\u003Cbr \/\u003E        }\u003Cbr \/\u003E        return TYPE_ITEM;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return stringArrayList.size() + 2;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private class HeaderViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        TextView headerTitle;\u003Cbr \/\u003E\u003Cbr \/\u003E        public HeaderViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            headerTitle = (TextView) view.findViewById(R.id.header_text);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private class FooterViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        TextView footerText;\u003Cbr \/\u003E\u003Cbr \/\u003E        public FooterViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            footerText = (TextView) view.findViewById(R.id.footer_text);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private class ItemViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        TextView itemText;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ItemViewHolder(View itemView) {\u003Cbr \/\u003E            super(itemView);\u003Cbr \/\u003E            itemText = (TextView) itemView.findViewById(R.id.recycler_item_text);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003E\u003Cb\u003ENOTE\u003C\/b\u003E\u003C\/code\u003E: You must add \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E and \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ECarView\u003C\/code\u003E dependencies to app-level \u003Cb\u003E\u003Ci\u003Ebuild.gradle\u003C\/i\u003E\u003C\/b\u003E to use these 2 widgets: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Ecompile 'com.android.support:recyclerview-v7:25.0.0'\u003Cbr \/\u003Ecompile 'com.android.support:cardview-v7:25.0.0'\u003Cbr \/\u003Ecompile 'com.android.support:appcompat-v7:25.0.0'\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ERunning application\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The most important work is done, running this app, you'll have this result: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/HyHkX42.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/HyHkX42.gif\" height=\"400\" width=\"223\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConclusions\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; By determine layout for each view type, we can add header and footer views to \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E easily. I hope this post is helpful with beginners which starting using \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003ERecyclerView\u003C\/code\u003E instead of \u003Ccode style=\"background: rgba(2, 130, 190, 0.0745098); border-radius: 15px; border: 1px solid rgba(2, 130, 190, 0.0784314); box-sizing: border-box; color: #333333; font-family: Menlo, Courier, monospace; font-size: 14.4px; padding: 1px 5px; word-wrap: break-word;\"\u003EListView\u003C\/code\u003E. For more posts about this flexible widget, please visit this tag link. Finally, you can get full code by click at the button below. \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/sh.st\/33LNX\" target=\"_blank\"\u003EDOWNLOAD FULL CODE\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/2961667893821063219\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/10\/adding-header-and-footer-layouts-for.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/2961667893821063219"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/2961667893821063219"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/10\/adding-header-and-footer-layouts-for.html","title":"Adding Header and Footer layouts for RecyclerView in Android"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/xTVhtf6To4o\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]}]}});
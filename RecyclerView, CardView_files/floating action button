// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915"},"updated":{"$t":"2018-05-08T15:07:47.380+07:00"},"category":[{"term":"Android UI"},{"term":"library"},{"term":"data loading"},{"term":"android basic"},{"term":"material design"},{"term":"listview"},{"term":"tutorials"},{"term":"viewpager"},{"term":"animation"},{"term":"recyclerview"},{"term":"activity"},{"term":"gridview"},{"term":"static image"},{"term":"TOP useful library"},{"term":"lollipop"},{"term":"actionbar"},{"term":"google playservices"},{"term":"cardview"},{"term":"android tabs"},{"term":"api"},{"term":"intent"},{"term":"Firebase"},{"term":"facebook"},{"term":"toolbar"},{"term":"Gmail style"},{"term":"database"},{"term":"dialog"},{"term":"edittext"},{"term":"services"},{"term":"slidingmenu"},{"term":"BroadcastReceiver"},{"term":"android studio"},{"term":"asynctask"},{"term":"floating action button"},{"term":"picasso"},{"term":"scroll event"},{"term":"views"},{"term":"widget"},{"term":"Bottom Sheet"},{"term":"Data Binding"},{"term":"QR code"},{"term":"barcodescanner"},{"term":"bubble layout"},{"term":"content provider"},{"term":"device information"},{"term":"files"},{"term":"lock screen"},{"term":"menu"},{"term":"notification"},{"term":"pull to refresh"},{"term":"sharedpreference"},{"term":"sqlite"},{"term":"textview"},{"term":"vision API"},{"term":"webservice"},{"term":"Bottom Navigation View"},{"term":"DateTime picker"},{"term":"Input Method Framework"},{"term":"Permission"},{"term":"StackView"},{"term":"butterknife"},{"term":"camera"},{"term":"carousel layout"},{"term":"chart"},{"term":"chat application"},{"term":"checkbox"},{"term":"chip"},{"term":"downloadManager"},{"term":"event bus"},{"term":"handler"},{"term":"json"},{"term":"location"},{"term":"navigationdrawer"},{"term":"parcelable"},{"term":"progressbar"},{"term":"resources"},{"term":"searchview"},{"term":"serializable"},{"term":"soap"},{"term":"telephony API"},{"term":"volley"},{"term":"xml parser"},{"term":"Android M"},{"term":"CountdownTimer"},{"term":"JobScheduler"},{"term":"MediaPlayer"},{"term":"NestedScrollView"},{"term":"REST"},{"term":"actionbarsherlock"},{"term":"battery"},{"term":"bluetooth"},{"term":"captcha"},{"term":"chrome custom tab"},{"term":"color picker"},{"term":"crouton"},{"term":"device rotation"},{"term":"download"},{"term":"draggablepanel"},{"term":"drawing"},{"term":"expandable listview"},{"term":"font"},{"term":"fragment"},{"term":"fresco"},{"term":"gifs"},{"term":"google map"},{"term":"google plus"},{"term":"gson"},{"term":"horizontal scrollview"},{"term":"imageloader"},{"term":"jar"},{"term":"java basic"},{"term":"loader manager"},{"term":"matrix"},{"term":"nearby API"},{"term":"network info"},{"term":"ormlite"},{"term":"palette"},{"term":"pdf"},{"term":"pdfrenderer"},{"term":"popupwindow"},{"term":"ratingbar"},{"term":"scratch view"},{"term":"sensor"},{"term":"skew layout"},{"term":"slidinguppanel"},{"term":"sparkline"},{"term":"spinner"},{"term":"style"},{"term":"swipeable listview"},{"term":"switch"},{"term":"theme"},{"term":"touch"},{"term":"twitter"},{"term":"video record"},{"term":"webview"},{"term":"youtubeplayer"}],"title":{"type":"text","$t":"Learn Programming Together"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/-\/floating+action+button?alt=json-in-script\u0026max-results=5"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/search\/label\/floating%20action%20button"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Hồng Thái"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"4"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"5"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-4189228151541078664"},"published":{"$t":"2016-08-13T19:17:00.000+07:00"},"updated":{"$t":"2016-09-22T11:29:29.010+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"facebook"},{"scheme":"http://www.blogger.com/atom/ns#","term":"floating action button"},{"scheme":"http://www.blogger.com/atom/ns#","term":"library"},{"scheme":"http://www.blogger.com/atom/ns#","term":"recyclerview"}],"title":{"type":"text","$t":"Display \"new stories\" Button like Facebook Application by an external library"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; Facebook application always has a lot of awesome UI designs, both on the web or mobile apps. If you have read my blog regularly, you will realize that I had some articles about \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/search\/label\/slidingmenu\" target=\"_blank\"\u003Esliding menu\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E like its. Moreover, this application have an another exciting widget which I call \"new posts reminding button\". It will appear when your newfeed has some new stories, by clicking it, your list view will be updated.\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/gTnaqzq.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/gTnaqzq.png\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; As you can see, it's interface look like a \u003Ci\u003Efloating action button\u003C\/i\u003E. This UI design you also can see at another apps like \u003Cb\u003E9GAG\u003C\/b\u003E, \u003Cb\u003ELinkedIn\u003C\/b\u003E. Today, in this post, I will provide a simple way to create it: using an third-party library. But I will talk a bit about \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EFloatingActionButton\u003C\/code\u003E widget (in Design Support library) first. \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EWeakness of Floating Action Button\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; We can find out that the \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EFloatingActionButton\u003C\/code\u003E always need \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ECoordinatorLayout\u003C\/code\u003E, we can not put it into place as we would like (here is the top\/center of screen) so with this design, \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EFloatingActionButton\u003C\/code\u003E\u0026nbsp;cannot solve our problem. \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Of course, you can make it yourself but like a lazy programmer like me, I'll use a simple library called \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"https:\/\/github.com\/webianks\/PopupBubble\" target=\"_blank\"\u003EPopupBubble\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E, with attaching the \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EPopupBubble\u003C\/code\u003E button with a \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ERecyclerView\u003C\/code\u003E, you will done this work easily. \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ESetting up the library\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; In order to use it, adding this dependency to your application level \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Ebuild.gradle\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Ecompile 'com.webianks.library:popup-bubble:1.0.2'\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: #cc0000;\"\u003EImportant Note\u003C\/span\u003E\u003C\/b\u003E\u003C\/code\u003E: your project min-sdk must be 14 or higher to use this library. \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EUsages\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The object that make the floating action button is \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EPopupBubble\u003C\/code\u003E. Some important xml attributes are following: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;!--Change background Color--\u0026gt;\u003Cbr \/\u003E    app:backgroundColor=\"?attr\/colorPrimary\"\u003Cbr \/\u003E\u0026lt;!--Change text --\u0026gt;\u003Cbr \/\u003E    app:text=\"New Stories\"\u003Cbr \/\u003E\u0026lt;!--Change text color--\u0026gt;\u003Cbr \/\u003E    app:textColor=\"#ffffff\"\u003Cbr \/\u003E\u0026lt;!--Show\/Hide Icon inside the button. By default its true.--\u0026gt;\u003Cbr \/\u003E    app:showIcon=\"false\"\u003Cbr \/\u003E\u0026lt;!--Change icon color--\u0026gt;\u003Cbr \/\u003E    app:iconColor=\"#ffffff\"\u003Cbr \/\u003E\u0026lt;!--Set Different Icons--\u0026gt;\u003Cbr \/\u003E    app:setIcon=\"@drawable\/ic_new.png\"\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003EIn Java code, it has some prominent methods: \u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003Eattaching it with \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ERecyclerView\u003C\/code\u003E by call \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EsetRecyclerView()\u003C\/code\u003E method\u003C\/li\u003E\u003Cli\u003EBy default, it is invisible, show\/hide it with call \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eshow()\u003C\/code\u003E\/\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Ehide()\u003C\/code\u003E\u003C\/li\u003E\u003Cli\u003EAdd listener if you want to know when the bubble is clicked:\u003C\/li\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003EpopupBubble.setPopupBubbleListener(new PopupBubble.PopupBubbleClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void bubbleClicked(Context context) {\u003Cbr \/\u003E                \/\/popup_bubble is clicked  \u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/ul\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ESample project code\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Now I will give to readers a sample project about using it. The \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ERecyclerView\u003C\/code\u003E data will be updated after 10 seconds (add new items) from a background thread (by using \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EHandler\u003C\/code\u003E). At this moment, the bubble button will appear and if you click on it, you will be redirected to the top (like Facebook app). \u003Cbr \/\u003ESource code for \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ERecyclerView\u003C\/code\u003E adapter, a simple adapter based on \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ERecyclerView.Adapter\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003ERecyclerViewAdapter.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.bubblebutton;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.annotation.SuppressLint;\u003Cbr \/\u003Eimport android.content.Context;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003Eimport android.widget.Toast;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class RecyclerViewAdapter extends RecyclerView.Adapter\u0026lt;RecyclerViewAdapter.CustomViewHolder\u0026gt; {\u003Cbr \/\u003E\u003Cbr \/\u003E    private List\u0026lt;DummyData\u0026gt; list;\u003Cbr \/\u003E    private Context context;\u003Cbr \/\u003E\u003Cbr \/\u003E    public RecyclerViewAdapter(Context context, List\u0026lt;DummyData\u0026gt; list) {\u003Cbr \/\u003E        this.list = list;\u003Cbr \/\u003E        this.context = context;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public CustomViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\u003Cbr \/\u003E        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_recycler_view, parent, false);\u003Cbr \/\u003E\u003Cbr \/\u003E        return new CustomViewHolder(itemView);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(CustomViewHolder holder, @SuppressLint(\"RecyclerView\") final int position) {\u003Cbr \/\u003E        holder.title.setText(list.get(position).getName());\u003Cbr \/\u003E        holder.title.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View view) {\u003Cbr \/\u003E                Toast.makeText(context, \"item \" + (position + 1) + \" clicked!\", Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return list.size();\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public class CustomViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        private TextView title;\u003Cbr \/\u003E\u003Cbr \/\u003E        public CustomViewHolder(View itemView) {\u003Cbr \/\u003E            super(itemView);\u003Cbr \/\u003E\u003Cbr \/\u003E            title = (TextView) itemView.findViewById(R.id.text);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; And this is the main activity code: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EMainActivity.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.bubblebutton;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.content.Context;\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.os.Handler;\u003Cbr \/\u003Eimport android.support.annotation.Nullable;\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.support.v7.widget.LinearLayoutManager;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.widget.Toast;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport com.webianks.library.PopupBubble;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.ArrayList;\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E    private List\u003Cdummydata\u003E list = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E    private RecyclerView recyclerView;\u003Cbr \/\u003E    private PopupBubble popupBubble;\u003Cbr \/\u003E    private RecyclerViewAdapter recyclerViewAdapter;\u003Cbr \/\u003E    private LinearLayoutManager layoutManager;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(@Nullable Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E        recyclerView = (RecyclerView) findViewById(R.id.recycler_view);\u003Cbr \/\u003E        layoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);\u003Cbr \/\u003E\u003Cbr \/\u003E        recyclerView.setLayoutManager(layoutManager);\u003Cbr \/\u003E        setDummyData();\u003Cbr \/\u003E\u003Cbr \/\u003E        popupBubble = (PopupBubble) findViewById(R.id.popup_bubble);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/handling onclick bubble button\u003Cbr \/\u003E        popupBubble.setPopupBubbleListener(new PopupBubble.PopupBubbleClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void bubbleClicked(Context context) {\u003Cbr \/\u003E                Toast.makeText(MainActivity.this, \"ListView updated!\", Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/attaching bubble button with recyclerview\u003Cbr \/\u003E        popupBubble.setRecyclerView(recyclerView);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/add new items from a background thread after 8 seconds\u003Cbr \/\u003E        addNewContent();\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void setDummyData() {\u003Cbr \/\u003E        DummyData dummyData;\u003Cbr \/\u003E        for (int i = 0; i \u0026lt; 20; i++) {\u003Cbr \/\u003E            dummyData = new DummyData();\u003Cbr \/\u003E            dummyData.setName(\"RecyclerView item \" + (i + 1));\u003Cbr \/\u003E            list.add(dummyData);\u003Cbr \/\u003E        }\u003Cbr \/\u003E\u003Cbr \/\u003E        recyclerViewAdapter = new RecyclerViewAdapter(this, list);\u003Cbr \/\u003E        recyclerView.setAdapter(recyclerViewAdapter);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void addNewContent() {\u003Cbr \/\u003E        final Handler handler = new Handler();\u003Cbr \/\u003E        handler.postDelayed(new Runnable() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void run() {\u003Cbr \/\u003E                DummyData data;\u003Cbr \/\u003E                for (int i = 10; i \u0026gt; 0; i--) {\u003Cbr \/\u003E                    data = new DummyData();\u003Cbr \/\u003E                    data.setName(\"New RecyclerView item \" + i);\u003Cbr \/\u003E                    list.add(0, data);\u003Cbr \/\u003E                }\u003Cbr \/\u003E                recyclerViewAdapter.notifyItemRangeInserted(0, 10);\u003Cbr \/\u003E                popupBubble.updateText(\"10 new items\");\u003Cbr \/\u003E                popupBubble.activate();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        }, 10000); \/\/update data after 10 seconds\u003Cbr \/\u003E\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/dummydata\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The main activity layout: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E        android:id=\"@+id\/recycler_view\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"match_parent\"\u003Cbr \/\u003E        android:scrollbars=\"vertical\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;com.webianks.library.PopupBubble\u003Cbr \/\u003E        android:id=\"@+id\/popup_bubble\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_centerHorizontal=\"true\"\u003Cbr \/\u003E        android:layout_margin=\"16dp\"\u003Cbr \/\u003E        app:backgroundColor=\"@color\/colorPrimary\"\u003Cbr \/\u003E        app:iconColor=\"#ffffff\"\u003Cbr \/\u003E        app:textColor=\"#ffffff\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Layout for each list view row: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eitem_recycler_view.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-xml\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"wrap_content\"\u003Cbr \/\u003E    android:orientation=\"vertical\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;TextView\u003Cbr \/\u003E        android:id=\"@+id\/text\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_margin=\"16dp\"\u003Cbr \/\u003E        android:text=\" Name\"\u003Cbr \/\u003E        android:textSize=\"15sp\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;View\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"0.5dp\"\u003Cbr \/\u003E        android:layout_below=\"@id\/text\"\u003Cbr \/\u003E        android:background=\"#dddddd\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The POJO class of this project: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EDummyData.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.bubblebutton;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class DummyData {\u003Cbr \/\u003E\u003Cbr \/\u003E    private String name;\u003Cbr \/\u003E\u003Cbr \/\u003E    public void setName(String name) {\u003Cbr \/\u003E        this.name = name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getName() {\u003Cbr \/\u003E        return name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003ERunning this application, we'll have this output:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/UpFVvy4TMeM\/0.jpg\" frameborder=\"0\" height=\"333\" src=\"https:\/\/www.youtube.com\/embed\/UpFVvy4TMeM?feature=player_embedded\" width=\"400\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFinal thoughts\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp;I had presented a simple solution to make this exciting UI created by Facebook. To deep understanding this library, you can visit it's page on \u003Cb\u003E\u003Ca href=\"https:\/\/github.com\/webianks\/PopupBubble\" target=\"_blank\"\u003EGithub\u003C\/a\u003E\u003C\/b\u003E and reading the code. In this way, the bubble button is always attached with a \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ERecyclerView\u003C\/code\u003E, so this is a weakness of this library, too! At the next post, I will provide another solution (customizing it myself) to make this design, coming soon! \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/sh.st\/MPprL\"\u003EView project on Github\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/4189228151541078664\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/08\/display-new-stories-button-like.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/4189228151541078664"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/4189228151541078664"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/08\/display-new-stories-button-like.html","title":"Display \"new stories\" Button like Facebook Application by an external library"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/UpFVvy4TMeM\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"1"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-6231423575276250383"},"published":{"$t":"2016-07-22T16:23:00.001+07:00"},"updated":{"$t":"2016-09-22T11:38:14.605+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"floating action button"},{"scheme":"http://www.blogger.com/atom/ns#","term":"library"},{"scheme":"http://www.blogger.com/atom/ns#","term":"material design"}],"title":{"type":"text","$t":"Floating Action Menu in Android"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; In \u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2016\/07\/android-material-design-widget-floating.html\"\u003Eprevious post\u003C\/a\u003E\u003C\/i\u003E, I had talked about some popular designs of Floating Action Button (FAB) - a component of Design Support Library. Beside that, there is a design from \u003Ci\u003E\u003Ca href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.google.android.apps.inbox\" target=\"_blank\"\u003EInbox application\u003C\/a\u003E\u003C\/i\u003E (developed by Google) which containing some FABs\u0026nbsp;are combined into a group and they will be shown after the \"\u003Ci\u003Erepresentative button\u003C\/i\u003E\" clicked. This design called Floating Action Menu:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/Jr4mEOO.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/Jr4mEOO.png\" height=\"400\" width=\"223\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Up to now, there is no official component from Google which allows us making this design so we must use third-party library to building a Floating Action Menu (FAM). Fortunately, libraries to resolve this problem is not unpopular!\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; In this post, I will use a third-party developed by \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"https:\/\/github.com\/Clans\/FloatingActionButton\"\u003EDmytro Tarianyk Clans\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E. It's very simple to implement and solving\u0026nbsp;this problem quickly!\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u003Cb\u003E\u003Cspan style=\"color: #274e13;\"\u003EDEMO VIDEO\u003C\/span\u003E\u003C\/b\u003E:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i9.ytimg.com\/vi\/6Io6ZAsT6X8\/default.jpg?sqp=CMDKx7wF\u0026amp;rs=AOn4CLDBBYL14QQbud_jlMJwiwx4SN5hjQ\" frameborder=\"0\" height=\"352\" src=\"https:\/\/www.youtube.com\/embed\/6Io6ZAsT6X8?feature=player_embedded\" width=\"400\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EImport the library\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Adding this dependency to your application level \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Ebuild.gradle\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Edependencies {\u003Cbr \/\u003E    compile 'com.github.clans:fab:1.6.4'\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Now, we have two objects called \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EFloatingActionMenu\u003C\/code\u003E and \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EFloatingActionButton\u003C\/code\u003E to build this layout. \u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ESome important features\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp;\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EFloatingActionMenu\u003C\/code\u003E has some attributes in xml that we have to pay attention: \u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Efab:menu_fab_label\u003C\/code\u003E: Label for Menu button\u003C\/li\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Efab_colorNormal\u003C\/code\u003E, \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Efab_colorPressed\u003C\/code\u003E, \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Efab_colorRipple\u003C\/code\u003E: Change button color based on it's status.\u003C\/li\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Efab_showAnimation\u003C\/code\u003E, \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Efab_hideAnimation\u003C\/code\u003E: Animation when menu expand\/collapse.\u003C\/li\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Emenu_labels_position\u003C\/code\u003E: Position of buttons label (left\/right).\u003C\/li\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Emenu_openDirection\u003C\/code\u003E: Open menu up or down.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EUsages in activity\u003C\/h3\u003E\u003C\/div\u003EDeclaring a layout for our activity like this: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:fab=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:orientation=\"vertical\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;TextView\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:padding=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        android:text=\"@string\/lorem_ipsum\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;com.github.clans.fab.FloatingActionMenu\u003Cbr \/\u003E        android:id=\"@+id\/fab_menu\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"match_parent\"\u003Cbr \/\u003E        android:layout_alignParentBottom=\"true\"\u003Cbr \/\u003E        android:layout_alignParentRight=\"true\"\u003Cbr \/\u003E        android:paddingBottom=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        android:paddingRight=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        fab:menu_backgroundColor=\"#ccffffff\"\u003Cbr \/\u003E        fab:menu_fab_label=\"Choose an action\"\u003Cbr \/\u003E        fab:fab_colorNormal=\"#DA4336\"\u003Cbr \/\u003E        fab:fab_colorPressed=\"#E75043\"\u003Cbr \/\u003E        fab:fab_colorRipple=\"#99FFFFFF\"\u003Cbr \/\u003E        fab:fab_showShadow=\"true\"\u003Cbr \/\u003E        fab:menu_labels_colorNormal=\"#333333\"\u003Cbr \/\u003E        fab:menu_labels_colorPressed=\"#444444\"\u003Cbr \/\u003E        fab:menu_labels_colorRipple=\"#66FFFFFF\"\u003Cbr \/\u003E        fab:menu_labels_showShadow=\"true\"\u003Cbr \/\u003E        fab:menu_labels_maxLines=\"-1\"\u003Cbr \/\u003E        fab:menu_labels_position=\"left\"\u003Cbr \/\u003E        fab:menu_openDirection=\"up\"\u003Cbr \/\u003E        fab:fab_shadowColor=\"#66000000\"\u003Cbr \/\u003E        fab:menu_labels_ellipsize=\"end\"\u003Cbr \/\u003E        fab:menu_labels_singleLine=\"true\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;com.github.clans.fab.FloatingActionButton\u003Cbr \/\u003E            android:id=\"@+id\/fab1\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:src=\"@android:drawable\/ic_menu_edit\"\u003Cbr \/\u003E            fab:fab_label=\"Edit an item\"\u003Cbr \/\u003E            fab:fab_size=\"mini\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;com.github.clans.fab.FloatingActionButton\u003Cbr \/\u003E            android:id=\"@+id\/fab2\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:src=\"@android:drawable\/ic_menu_add\"\u003Cbr \/\u003E            fab:fab_label=\"Menu item 2\"\u003Cbr \/\u003E            fab:fab_size=\"mini\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;com.github.clans.fab.FloatingActionButton\u003Cbr \/\u003E            android:id=\"@+id\/fab3\"\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:src=\"@android:drawable\/ic_menu_delete\"\u003Cbr \/\u003E            fab:fab_label=\"@string\/lorem_ipsum\"\u003Cbr \/\u003E            fab:fab_size=\"mini\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/com.github.clans.fab.FloatingActionMenu\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003EProviding some simple Java code for this main activity: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003EMainActivity.java\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003Epackage info.devexchanges.floatingactionmenu;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.widget.Toast;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport com.github.clans.fab.FloatingActionButton;\u003Cbr \/\u003Eimport com.github.clans.fab.FloatingActionMenu;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E    private FloatingActionMenu fam;\u003Cbr \/\u003E    private FloatingActionButton fabEdit, fabDelete, fabAdd;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E\u003Cbr \/\u003E        fabAdd = (FloatingActionButton) findViewById(R.id.fab2);\u003Cbr \/\u003E        fabDelete = (FloatingActionButton) findViewById(R.id.fab3);\u003Cbr \/\u003E        fabEdit = (FloatingActionButton) findViewById(R.id.fab1);\u003Cbr \/\u003E        fam = (FloatingActionMenu) findViewById(R.id.fab_menu);\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/handling menu status (open or close)\u003Cbr \/\u003E        fam.setOnMenuToggleListener(new FloatingActionMenu.OnMenuToggleListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onMenuToggle(boolean opened) {\u003Cbr \/\u003E                if (opened) {\u003Cbr \/\u003E                    showToast(\"Menu is opened\");\u003Cbr \/\u003E                } else {\u003Cbr \/\u003E                    showToast(\"Menu is closed\");\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/handling each floating action button clicked\u003Cbr \/\u003E        fabDelete.setOnClickListener(onButtonClick());\u003Cbr \/\u003E        fabEdit.setOnClickListener(onButtonClick());\u003Cbr \/\u003E        fabAdd.setOnClickListener(onButtonClick());\u003Cbr \/\u003E\u003Cbr \/\u003E        fam.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View view) {\u003Cbr \/\u003E                if (fam.isOpened()) {\u003Cbr \/\u003E                    fam.close(true);\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onButtonClick() {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View view) {\u003Cbr \/\u003E                if (view == fabAdd) {\u003Cbr \/\u003E                    showToast(\"Button Add clicked\");\u003Cbr \/\u003E                } else if (view == fabDelete) {\u003Cbr \/\u003E                    showToast(\"Button Delete clicked\");\u003Cbr \/\u003E                } else {\u003Cbr \/\u003E                    showToast(\"Button Edit clicked\");\u003Cbr \/\u003E                }\u003Cbr \/\u003E                fam.close(true);\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void showToast(String msg) {\u003Cbr \/\u003E        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Running application, we'll have this output: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/BwRWKr1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/BwRWKr1.png\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Click the \"\u003Ci\u003Erepresentative button\u003C\/i\u003E\" to open Menu:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/V2EVBQn.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/V2EVBQn.png\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; After click the \"delete button\" in Menu:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/rfX0VmF.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/rfX0VmF.png\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Animation for expanding\/collapsing process:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/7j9rjT8.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/7j9rjT8.gif\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EConclusions\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; As you can see, with a small third-party library, we can build a FAM easily. By searching on Internet, you can find out another similar libraries:\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/futuresimple\/android-floating-action-button\"\u003Ehttps:\/\/github.com\/futuresimple\/android-floating-action-button\u003C\/a\u003E\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/wangjiegulu\/RapidFloatingActionButton\"\u003Ehttps:\/\/github.com\/wangjiegulu\/RapidFloatingActionButton\u003C\/a\u003E\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/makovkastar\/FloatingActionButton\"\u003Ehttps:\/\/github.com\/makovkastar\/FloatingActionButton\u003C\/a\u003E\u003C\/li\u003E\u003C\/ul\u003E\u0026nbsp; \u0026nbsp; You should try to use them and choose the best one! \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Reference to the libary Github page:\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/Clans\/FloatingActionButton\"\u003Ehttps:\/\/github.com\/Clans\/FloatingActionButton\u003C\/a\u003E\u003Cbr \/\u003E\u003Cdiv class=\"button_github\"\u003E\u003Ca href=\"http:\/\/sh.st\/MPsIH\" target=\"_blank\"\u003EView project on Github\u003C\/a\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/6231423575276250383\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/07\/floating-action-menu-in-android.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/6231423575276250383"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/6231423575276250383"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/07\/floating-action-menu-in-android.html","title":"Floating Action Menu in Android"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/6Io6ZAsT6X8\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-100167879302728456"},"published":{"$t":"2016-07-21T11:13:00.003+07:00"},"updated":{"$t":"2016-08-21T21:42:50.093+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Android UI"},{"scheme":"http://www.blogger.com/atom/ns#","term":"floating action button"},{"scheme":"http://www.blogger.com/atom/ns#","term":"material design"}],"title":{"type":"text","$t":"Android Material Design widget: Floating Action Button"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; I have many posts about Material Design technology, and some of them is guiding how to use new widgets which available in Design Support library. Floating Action Button is a new Button style that make depth for Android UI and\u0026nbsp;convenience in UX.\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/xNfw8r5.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/xNfw8r5.jpg\" height=\"225\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; In this post, I will talk about some popular designs around Floating Action Button (FAB),\u0026nbsp;readers follow to get a more accurate perspective on this component.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EDesign support library dependency\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; As a component of Design Support library, so in order to use it, you must add this dependency to your \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eapp\/build.gradle\u003C\/code\u003E: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-js\"\u003Edependencies {\u003Cbr \/\u003E    compile 'com.android.support:design:24.0.0'\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EAdding Action Button to layout\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; A simple declaring FAB in xml can be like this: \u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;android.support.design.widget.FloatingActionButton\u003Cbr \/\u003E        android:id=\"@+id\/fab\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_gravity=\"bottom|end\"\u003Cbr \/\u003E        android:layout_margin=\"@dimen\/fab_margin\"\u003Cbr \/\u003E        android:src=\"@android:drawable\/ic_dialog_email\" \/\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Some important attributes:  \u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eapp:fabSize\u003C\/code\u003E: defining FAB size, supports 2 values: \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Enormal\u003C\/code\u003E and \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Emini\u003C\/code\u003E.\u003C\/li\u003E\u003Cli\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Elayout_gravity\u003C\/code\u003E: define position of FAB.\u003C\/li\u003E\u003Cli\u003EBy default, FAB takes colorAccent as background color. If you want to change the background of fab, use \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eapp:backgroundTint\u003C\/code\u003E attribute to define your own background color.\u003C\/li\u003E\u003C\/ul\u003E\u0026nbsp; \u0026nbsp; And an activity layout which contains a FAB: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.design.widget.CoordinatorLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:id=\"@+id\/coor\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:fitsSystemWindows=\"true\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.AppBarLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:theme=\"@style\/AppTheme.AppBarOverlay\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.v7.widget.Toolbar\u003Cbr \/\u003E            android:id=\"@+id\/toolbar\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"?attr\/actionBarSize\"\u003Cbr \/\u003E            android:background=\"?attr\/colorPrimary\"\u003Cbr \/\u003E            app:popupTheme=\"@style\/AppTheme.PopupOverlay\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/android.support.design.widget.AppBarLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"match_parent\"\u003Cbr \/\u003E        android:padding=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        app:layout_behavior=\"@string\/appbar_scrolling_view_behavior\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_centerInParent=\"true\"\u003Cbr \/\u003E            android:text=\"Android Floating Action Button\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.FloatingActionButton\u003Cbr \/\u003E        android:id=\"@+id\/fab\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_gravity=\"bottom|end\"\u003Cbr \/\u003E        android:layout_margin=\"@dimen\/fab_margin\"\u003Cbr \/\u003E        android:src=\"@android:drawable\/ic_dialog_email\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/android.support.design.widget.CoordinatorLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Running this activity, we will have this output: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/gTOTdsl.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/gTOTdsl.png\" height=\"400\" width=\"225\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EHandling click event\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Like other \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003EView\u003C\/code\u003E, we handle it's click event normally:\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-java\"\u003E fab.setOnClickListener(new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View view) {\u003Cbr \/\u003E                Snackbar snackbar = Snackbar\u003Cbr \/\u003E                .make(coordinatorLayout, \"This is Snackbar\", Snackbar.LENGTH_LONG)\u003Cbr \/\u003E                .setAction(\"OK\", null);\u003Cbr \/\u003E\u003Cbr \/\u003E                snackbar.show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: #cc0000;\"\u003EImportant Note\u003C\/span\u003E\u003C\/b\u003E\u003C\/code\u003E: To show \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ESnackbar\u003C\/code\u003E, the root container in your layout must be \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003ECoordinatorLayout\u003C\/code\u003E (like my \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eactivity_main.xml\u003C\/code\u003E above)! \u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; And this is output:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/6nUFiSR.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/6nUFiSR.gif\" height=\"400\" width=\"231\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EPut FAB between two layouts\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The interesting feature of FAB is that we can set it between 2 layouts (or widgets) by using \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eapp:layout_anchor\u003C\/code\u003E. Designing a layout like this: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.design.widget.CoordinatorLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:id=\"@+id\/coor\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:fitsSystemWindows=\"true\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.v7.widget.RecyclerView\u003Cbr \/\u003E        android:id=\"@+id\/recycler\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"match_parent\"\u003Cbr \/\u003E        app:layout_behavior=\"@string\/appbar_scrolling_view_behavior\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.AppBarLayout\u003Cbr \/\u003E        android:id=\"@+id\/appbar\"\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"220dp\"\u003Cbr \/\u003E        android:fitsSystemWindows=\"true\"\u003Cbr \/\u003E        android:theme=\"@style\/ThemeOverlay.AppCompat.Dark.ActionBar\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.design.widget.CollapsingToolbarLayout\u003Cbr \/\u003E            android:id=\"@+id\/collapsing_toolbar\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"match_parent\"\u003Cbr \/\u003E            android:fitsSystemWindows=\"true\"\u003Cbr \/\u003E            app:contentScrim=\"?attr\/colorPrimary\"\u003Cbr \/\u003E            app:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E            \u0026lt;ImageView\u003Cbr \/\u003E                android:id=\"@+id\/header\"\u003Cbr \/\u003E                android:layout_width=\"match_parent\"\u003Cbr \/\u003E                android:layout_height=\"match_parent\"\u003Cbr \/\u003E                android:background=\"@drawable\/midu\"\u003Cbr \/\u003E                android:fitsSystemWindows=\"true\"\u003Cbr \/\u003E                android:scaleType=\"centerCrop\"\u003Cbr \/\u003E                app:layout_collapseMode=\"parallax\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E            \u0026lt;android.support.v7.widget.Toolbar\u003Cbr \/\u003E                android:id=\"@+id\/toolbar\"\u003Cbr \/\u003E                android:layout_width=\"match_parent\"\u003Cbr \/\u003E                android:layout_height=\"?attr\/actionBarSize\"\u003Cbr \/\u003E                app:layout_collapseMode=\"pin\"\u003Cbr \/\u003E                app:popupTheme=\"@style\/ThemeOverlay.AppCompat.Light\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;\/android.support.design.widget.CollapsingToolbarLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/android.support.design.widget.AppBarLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.FloatingActionButton\u003Cbr \/\u003E        android:id=\"@+id\/fab\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_margin=\"10dp\"\u003Cbr \/\u003E        android:src=\"@android:drawable\/ic_media_play\"\u003Cbr \/\u003E        app:layout_anchor=\"@+id\/appbar\"\u003Cbr \/\u003E        app:layout_anchorGravity=\"bottom|right|end\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/android.support.design.widget.CoordinatorLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Running this activity, we may have this result \u0026nbsp;(FAB is floating on two layouts): \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/czMtFkd.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/czMtFkd.gif\" height=\"400\" width=\"231\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; font-family: \u0026quot;source code pro\u0026quot;, monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003E\u003Cspan style=\"color: #cc0000;\"\u003E\u003Cb\u003ENote\u003C\/b\u003E\u003C\/span\u003E\u003C\/code\u003E: To make expanding\/collapsing Action Bar like output above, please read \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2015\/10\/android-material-design.html\"\u003ETHIS POST\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ETwo FABs next to each other\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; When using Google Map application, you can see a FAB on each other like this:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/4dRHE7u.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/4dRHE7u.png\" height=\"400\" width=\"240\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; By combining \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eapp:layout_anchor\u003C\/code\u003E and \u003Ccode class=\"inline\" style=\"background: rgb(245, 247, 248); border-radius: 3px; border: 1px solid rgb(228, 228, 228); box-sizing: border-box; color: #4b4b4b; font-family: 'Source Code Pro', Monaco, monospace; font-size: 13px; line-height: 25.6px; padding: 4px 4px 1px;\"\u003Eapp:layout_anchorGravity\u003C\/code\u003E, we can make this layout type: \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan style=\"color: #007a00;\"\u003E\u003Cu\u003E\u003Cb\u003Eactivity_main.xml\u003C\/b\u003E\u003C\/u\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"line-numbers\"\u003E\u003Ccode class=\"language-aspnet\"\u003E\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003Cbr \/\u003E\u0026lt;android.support.design.widget.CoordinatorLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\u003Cbr \/\u003E    xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"\u003Cbr \/\u003E    android:id=\"@+id\/coor\"\u003Cbr \/\u003E    android:layout_width=\"match_parent\"\u003Cbr \/\u003E    android:layout_height=\"match_parent\"\u003Cbr \/\u003E    android:fitsSystemWindows=\"true\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.AppBarLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:theme=\"@style\/AppTheme.AppBarOverlay\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;android.support.v7.widget.Toolbar\u003Cbr \/\u003E            android:id=\"@+id\/toolbar\"\u003Cbr \/\u003E            android:layout_width=\"match_parent\"\u003Cbr \/\u003E            android:layout_height=\"?attr\/actionBarSize\"\u003Cbr \/\u003E            android:background=\"?attr\/colorPrimary\"\u003Cbr \/\u003E            app:popupTheme=\"@style\/AppTheme.PopupOverlay\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/android.support.design.widget.AppBarLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;RelativeLayout\u003Cbr \/\u003E        android:layout_width=\"match_parent\"\u003Cbr \/\u003E        android:layout_height=\"match_parent\"\u003Cbr \/\u003E        android:padding=\"@dimen\/activity_horizontal_margin\"\u003Cbr \/\u003E        app:layout_behavior=\"@string\/appbar_scrolling_view_behavior\"\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;TextView\u003Cbr \/\u003E            android:layout_width=\"wrap_content\"\u003Cbr \/\u003E            android:layout_height=\"wrap_content\"\u003Cbr \/\u003E            android:layout_centerInParent=\"true\"\u003Cbr \/\u003E            android:text=\"Android Floating Action Button\"\u003Cbr \/\u003E            android:textStyle=\"bold\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/RelativeLayout\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.FloatingActionButton\u003Cbr \/\u003E        android:id=\"@+id\/fab\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_gravity=\"bottom|end\"\u003Cbr \/\u003E        android:layout_marginRight=\"@dimen\/fab_margin\"\u003Cbr \/\u003E        android:layout_marginBottom=\"@dimen\/fab_margin\"\u003Cbr \/\u003E        android:src=\"@android:drawable\/ic_media_pause\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;android.support.design.widget.FloatingActionButton\u003Cbr \/\u003E        android:id=\"@+id\/fab2\"\u003Cbr \/\u003E        android:layout_width=\"wrap_content\"\u003Cbr \/\u003E        android:layout_height=\"wrap_content\"\u003Cbr \/\u003E        android:layout_gravity=\"top|end\"\u003Cbr \/\u003E        android:src=\"@android:drawable\/ic_media_play\"\u003Cbr \/\u003E        app:layout_anchor=\"@id\/fab\"\u003Cbr \/\u003E        app:layout_anchorGravity=\"top\" \/\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;\/android.support.design.widget.CoordinatorLayout\u0026gt;\u003Cbr \/\u003E\u003C\/code\u003E\u003C\/pre\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; And this is our result: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/0vywtzR.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/0vywtzR.png\" height=\"400\" width=\"225\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFloating Action Menu\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; As you can see at Inbox application (developed by Google), there are a component can be called as Floating Action Menu which contains many FABs: \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/Jr4mEOO.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/Jr4mEOO.png\" height=\"400\" width=\"223\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Up to now, there are no official way given by Google to building this layout, so you must use an external library to make it. With this matter, I had a\u0026nbsp;\u003Cb\u003E\u003Ci\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/2016\/07\/floating-action-menu-in-android.html\" target=\"_blank\"\u003Eseparate post\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E here!\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv br=\"\" gt=\"\" style=\"border-radius: 3px; border: 1px solid rgb(102 , 204 , 204); box-shadow: rgb(136 , 193 , 204) 0px 0px 30px inset; color: #222222; font-family: \u0026quot;times new roman\u0026quot; , \u0026quot;palatino linotype\u0026quot; , \u0026quot;palatino\u0026quot; , serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin-bottom: 10px; margin-top: 10px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFinal thoughts\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Floating Action Button is not hard to use in your Android application. But in order to make a good UX, you must read carefully \u003Ci\u003E\u003Cb\u003E\u003Ca href=\"https:\/\/material.google.com\/components\/buttons-floating-action-button.html\"\u003Edesign guide from Google\u003C\/a\u003E\u003C\/b\u003E\u003C\/i\u003E. Through this post, I hope that readers can choose the suitable FAB style for your own cases.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; \u003Cb\u003EReferences\u003C\/b\u003E:\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EOfficial FAB \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"https:\/\/developer.android.com\/reference\/android\/support\/design\/widget\/FloatingActionButton.html\"\u003Edocument\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E.\u0026nbsp;\u003C\/li\u003E\u003Cli\u003EFAB guide in \u003Cb\u003E\u003Ci\u003E\u003Ca href=\"https:\/\/guides.codepath.com\/android\/floating-action-buttons\"\u003ECodePath\u003C\/a\u003E\u003C\/i\u003E\u003C\/b\u003E.\u003C\/li\u003E\u003C\/ul\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/100167879302728456\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/07\/android-material-design-widget-floating.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/100167879302728456"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/100167879302728456"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2016\/07\/android-material-design-widget-floating.html","title":"Android Material Design widget: Floating Action Button"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"0"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]},{"id":{"$t":"tag:blogger.com,1999:blog-5499848987087947915.post-5949596116961333989"},"published":{"$t":"2015-09-04T14:56:00.001+07:00"},"updated":{"$t":"2016-09-22T16:49:02.729+07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"cardview"},{"scheme":"http://www.blogger.com/atom/ns#","term":"floating action button"},{"scheme":"http://www.blogger.com/atom/ns#","term":"lollipop"},{"scheme":"http://www.blogger.com/atom/ns#","term":"material design"},{"scheme":"http://www.blogger.com/atom/ns#","term":"recyclerview"}],"title":{"type":"text","$t":"Android Material Design Features: RecyclerView, CardView and FloatingActionButon"},"content":{"type":"html","$t":"\u0026nbsp; \u0026nbsp; In old verisons (pre 5.0), we are familiar with ListView with and \u003Ci\u003EArrayAdapter \u003C\/i\u003Eor \u003Ci\u003EBaseAdapter\u003C\/i\u003E. With the release of Android Lollipop and Material Design technology, where Support Design Library is a new point, RecyclerView has many similarities. RecyclerView is more advanced and flexible and efficient version of ListView. RecyclerView ViewGroup is an container for larger data set of views that can be recycled and scrolled very efficiently. RecyclerView can be used for larger datasets to be rendered on the UI like a list. RecyclerView provides maximum flexibility to design different kind of views. Moreover, CardView can be set as each RecyclerView elements, user can notice this design now available in \u003Cb\u003E\u003Ci\u003EGoogle+\u003C\/i\u003E\u003C\/b\u003E app.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp;\u0026nbsp;To create complex lists and cards with material design styles in your apps, you can use the RecyclerView and CardView widgets. In this post, I provide solution to combined both of them. Futher, I also include a FloatingActionButton (a Design Support Libary widget, too) and adding data to RecyclerView by it action!\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Please watch project output by this demo video:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/OYoi2MB2miM\/0.jpg\" frameborder=\"0\" height=\"360\" src=\"https:\/\/www.youtube.com\/embed\/OYoi2MB2miM?feature=player_embedded\" width=\"400\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"border-radius: 3px; border: 1px solid rgb(102, 204, 204); box-shadow: rgb(136, 193, 204) 0px 0px 30px inset; color: #222222; font-family: Georgia, Utopia, 'Palatino Linotype', Palatino, serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EStarting project\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; I select min-sdk is 15 (Design Support Libary support API 7 and higher). To use this libary, include dependencies to \u003Cspan style=\"background-color: #eeeeee; color: #cc0000;\"\u003Eapp\/build.gradle\u003C\/span\u003E:\u003Cbr \/\u003E\u003Cpre class=\"brush: js\"\u003E    compile 'com.android.support:recyclerview-v7:22.2.1'\u003Cbr \/\u003E    compile 'com.android.support:cardview-v7:22.2.1'\u003Cbr \/\u003E    compile 'com.android.support:design:22.2.1'\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; In order to combine FloatingActionButton with RecyclerView, we use FrameLayout as root. Main activity layout simple like this:\u003Cbr \/\u003E\u003Cscript class=\"brush: xml\" type=\"syntaxhighlighter\"\u003E\u003C![CDATA[ \u0026lt;FrameLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"     xmlns:app=\"http:\/\/schemas.android.com\/apk\/res-auto\"     xmlns:tools=\"http:\/\/schemas.android.com\/tools\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:layout_margin=\"10dp\"     tools:context=\".MainActivity\"\u003E     \u0026lt;android.support.v7.widget.RecyclerView         android:id=\"@+id\/recyle_view\"         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\" \/\u003E     \u0026lt;android.support.design.widget.FloatingActionButton         android:id=\"@+id\/fab\"         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:layout_gravity=\"bottom|right\"         android:layout_marginBottom=\"10dp\"         android:layout_marginRight=\"10dp\"         android:src=\"@mipmap\/ic_plus\"         app:fabSize=\"normal\" \/\u003E \u0026lt;\/FrameLayout\u003E]]\u003E\u003C\/script\u003E \u0026nbsp; \u0026nbsp; Okey, in programmatically code, we need \"config\" RecyclerView features.\u0026nbsp;If you know that changes in content do not change the layout size of the RecyclerView, please\u0026nbsp;use this setting to improve performance:\u003Cbr \/\u003E\u003Cpre class=\"brush: java\"\u003ErecyclerView.setHasFixedSize(true);\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; We also set LayoutManager (I use LinearLayout) for RecyclerView and set adapter like ListView:\u003Cbr \/\u003E\u003Cpre class=\"brush: java\"\u003E        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\u003Cbr \/\u003E        recyclerView.setLayoutManager(layoutManager);\u003Cbr \/\u003E        \u003Cbr \/\u003E        setRecyclerViewData(); \/\/ call adding data to array list method\u003Cbr \/\u003E        adapter = new RecyclerAdapter(this, friendArrayList);\u003Cbr \/\u003E        recyclerView.setAdapter(adapter);\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cdiv style=\"border-radius: 3px; border: 1px solid rgb(102, 204, 204); box-shadow: rgb(136, 193, 204) 0px 0px 30px inset; color: #222222; font-family: Georgia, Utopia, 'Palatino Linotype', Palatino, serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003ECutomizing a RecyclerView Adapter\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp;RecyclerView includes special kind of adapter which works pretty much same as traditional Android adapters but with additional functionalities. We can build a Adapter class based on\u0026nbsp;\u003Cspan style=\"background-color: #eeeeee; color: #cc0000;\"\u003ERecyclerView.Adapter\u0026lt;RecyclerAdapter.ViewHolder\u0026gt;\u003C\/span\u003E. In this class, first, create a ViewHolder class extends from \u003Cspan style=\"background-color: #eeeeee; color: #cc0000;\"\u003ERecyclerAdapter.ViewHolder\u003C\/span\u003E:\u003Cbr \/\u003E\u003Cpre class=\"brush: java\"\u003E\/**\u003Cbr \/\u003E     * View holder to display each RecylerView item\u003Cbr \/\u003E     *\/\u003Cbr \/\u003E    protected class ViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        private ImageView imageView;\u003Cbr \/\u003E        private TextView name;\u003Cbr \/\u003E        private TextView job;\u003Cbr \/\u003E        private View container;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            imageView = (ImageView) view.findViewById(R.id.image);\u003Cbr \/\u003E            name = (TextView) view.findViewById(R.id.name);\u003Cbr \/\u003E            job = (TextView) view.findViewById(R.id.job);\u003Cbr \/\u003E            container = view.findViewById(R.id.card_view);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Note: this inner class must in \u003Ci\u003Epublic \u003C\/i\u003Eor \u003Ci\u003Eprotected\u003C\/i\u003E type to use!\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; Overriding \u003Cspan style=\"background-color: #eeeeee; color: #cc0000;\"\u003EonCreateViewHolder()\u003C\/span\u003E and \u003Cspan style=\"background-color: #eeeeee;\"\u003E\u003Cspan style=\"color: #cc0000;\"\u003EonBindViewHolder()\u003C\/span\u003E\u003C\/span\u003E to organize the code, through these methods, data views and size were created:\u003Cbr \/\u003E\u003Cpre class=\"brush: java\"\u003E    @Override\u003Cbr \/\u003E    public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/inflate your layout and pass it to view holder\u003Cbr \/\u003E        LayoutInflater inflater = activity.getLayoutInflater();\u003Cbr \/\u003E        View view = inflater.inflate(R.layout.item_recycler, viewGroup, false);\u003Cbr \/\u003E        ViewHolder viewHolder = new ViewHolder(view);\u003Cbr \/\u003E\u003Cbr \/\u003E        return viewHolder;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(RecyclerAdapter.ViewHolder viewHolder, int position) {\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/setting data to view holder elements\u003Cbr \/\u003E        viewHolder.name.setText(friends.get(position).getName());\u003Cbr \/\u003E        viewHolder.job.setText(friends.get(position).getJob());\u003Cbr \/\u003E\u003Cbr \/\u003E        if (friends.get(position).isGender()) {\u003Cbr \/\u003E            viewHolder.imageView.setImageResource(R.mipmap.male);\u003Cbr \/\u003E        } else {\u003Cbr \/\u003E            viewHolder.imageView.setImageResource(R.mipmap.female);\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \/\/set on click listener for each element\u003Cbr \/\u003E        viewHolder.container.setOnClickListener(onClickListener(position));\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; As note above, \u0026nbsp;each RecyclerView item is a CardView, this was declared in xml layout:\u003Cbr \/\u003E\u003Cscript class=\"brush: xml\" title=\"\u0026lt;u\u0026gt;item_recycler.xml\u0026lt;\/u\u0026gt;\" type=\"syntaxhighlighter\"\u003E\u003C![CDATA[ \u0026lt;android.support.v7.widget.CardView xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"     xmlns:cardview=\"http:\/\/schemas.android.com\/apk\/res-auto\"     android:id=\"@+id\/card_view\"     android:layout_width=\"match_parent\"     android:layout_height=\"wrap_content\"     android:layout_marginBottom=\"6dp\"\u003E     \u0026lt;LinearLayout         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:orientation=\"horizontal\"\u003E         \u0026lt;ImageView             android:id=\"@+id\/image\"             android:layout_width=\"100dp\"             android:layout_height=\"80dp\"             android:padding=\"5dp\"             android:src=\"@mipmap\/ic_launcher\" \/\u003E         \u0026lt;RelativeLayout             android:layout_width=\"match_parent\"             android:layout_height=\"wrap_content\"\u003E             \u0026lt;TextView                 android:id=\"@+id\/name\"                 android:layout_width=\"match_parent\"                 android:layout_height=\"wrap_content\"                 android:text=\"\"                 android:textColor=\"@android:color\/holo_blue_dark\" \/\u003E             \u0026lt;TextView                 android:id=\"@+id\/job\"                 android:layout_width=\"match_parent\"                 android:layout_height=\"wrap_content\"                 android:layout_below=\"@+id\/name\"                 android:text=\"\"                 android:textColor=\"@android:color\/holo_green_dark\"                 android:textStyle=\"bold\" \/\u003E         \u003C\/RelativeLayout\u003E    \u003C\/LinearLayout\u003E\u003C\/android.support.v7.widget.CardView\u003E]]\u003E\u003C\/script\u003E\u0026nbsp; \u0026nbsp; When app running, we'll have this output screen:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/rUXB7No.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/rUXB7No.gif\" height=\"320\" width=\"192\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv style=\"border-radius: 3px; border: 1px solid rgb(102, 204, 204); box-shadow: rgb(136, 193, 204) 0px 0px 30px inset; color: #222222; font-family: Georgia, Utopia, 'Palatino Linotype', Palatino, serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EHandle RecyclerView Item Click Event\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Note like GridView or ListView,\u0026nbsp;handling click event on RecyclerView is not as sweet as them. As \u003Cb\u003E\u003Ci\u003Eitem_recycler.xml\u003C\/i\u003E\u003C\/b\u003E above, I set ID for root layout (CardView) and set it's click event \u0026nbsp;in programmatically code, so \"item click event\" was done. Put this \u003Ci\u003EView.OnClickListener\u003C\/i\u003E method in our adapter code:\u003Cbr \/\u003E\u003Cpre class=\"brush: java\"\u003Eprivate View.OnClickListener onClickListener(final int position) {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                final Dialog dialog = new Dialog(activity);\u003Cbr \/\u003E                dialog.setContentView(R.layout.item_recycler);\u003Cbr \/\u003E                dialog.setTitle(\"Position \" + position);\u003Cbr \/\u003E                dialog.setCancelable(true); \/\/ dismiss when touching outside Dialog\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/ set the custom dialog components - texts and image\u003Cbr \/\u003E                TextView name = (TextView) dialog.findViewById(R.id.name);\u003Cbr \/\u003E                TextView job = (TextView) dialog.findViewById(R.id.job);\u003Cbr \/\u003E                ImageView icon = (ImageView) dialog.findViewById(R.id.image);\u003Cbr \/\u003E\u003Cbr \/\u003E                setDataToView(name, job, icon, position);\u003Cbr \/\u003E\u003Cbr \/\u003E                dialog.show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Ofcourse, from now, when each item clicked, a Dialog appeared and show a single CardView with it's information:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/v3DT3M6.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/v3DT3M6.png\" height=\"320\" width=\"192\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"border-radius: 3px; border: 1px solid rgb(102, 204, 204); box-shadow: rgb(136, 193, 204) 0px 0px 30px inset; color: #222222; font-family: Georgia, Utopia, 'Palatino Linotype', Palatino, serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFloating Action Button implements\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; We have defined a FloatingActionButton in main activity (xml) layout above. Now, we set click event for it. In this example, it is \"adding a new friend\" button, which showing a Dialog and user put some new values and app will add to data list and update RecyclerView layout. In main activity, add these method:\u003Cbr \/\u003E\u003Cpre class=\"brush: java\"\u003E private View.OnClickListener onAddingListener() {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                final Dialog dialog = new Dialog(MainActivity.this);\u003Cbr \/\u003E                dialog.setContentView(R.layout.dialog_add); \/\/layout for dialog\u003Cbr \/\u003E                dialog.setTitle(\"Add a new friend\");\u003Cbr \/\u003E                dialog.setCancelable(false); \/\/none-dismiss when touching outside Dialog\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/ set the custom dialog components - texts and image\u003Cbr \/\u003E                EditText name = (EditText) dialog.findViewById(R.id.name);\u003Cbr \/\u003E                EditText job = (EditText) dialog.findViewById(R.id.job);\u003Cbr \/\u003E                Spinner spnGender = (Spinner) dialog.findViewById(R.id.gender);\u003Cbr \/\u003E                View btnAdd = dialog.findViewById(R.id.btn_ok);\u003Cbr \/\u003E                View btnCancel = dialog.findViewById(R.id.btn_cancel);\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/set spinner adapter\u003Cbr \/\u003E                ArrayList\u0026lt;String\u0026gt; gendersList = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E                gendersList.add(\"Male\");\u003Cbr \/\u003E                gendersList.add(\"Female\");\u003Cbr \/\u003E                ArrayAdapter\u0026lt;String\u0026gt; spnAdapter = new ArrayAdapter\u0026lt;String\u0026gt;(MainActivity.this,\u003Cbr \/\u003E                        android.R.layout.simple_dropdown_item_1line, gendersList);\u003Cbr \/\u003E                spnGender.setAdapter(spnAdapter);\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/set handling event for 2 buttons and spinner\u003Cbr \/\u003E                spnGender.setOnItemSelectedListener(onItemSelectedListener());\u003Cbr \/\u003E                btnAdd.setOnClickListener(onConfirmListener(name, job, dialog));\u003Cbr \/\u003E                btnCancel.setOnClickListener(onCancelListener(dialog));\u003Cbr \/\u003E\u003Cbr \/\u003E                dialog.show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private AdapterView.OnItemSelectedListener onItemSelectedListener() {\u003Cbr \/\u003E        return new AdapterView.OnItemSelectedListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onItemSelected(AdapterView parent, View view, int position, long id) {\u003Cbr \/\u003E                if (position == 0) {\u003Cbr \/\u003E                    gender = true;\u003Cbr \/\u003E                } else {\u003Cbr \/\u003E                    gender = false;\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onNothingSelected(AdapterView parent) {\u003Cbr \/\u003E\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onConfirmListener(final EditText name, final EditText job, final Dialog dialog) {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                Friend friend = new Friend(name.getText().toString().trim(), gender, job.getText().toString().trim());\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/adding new object to arraylist\u003Cbr \/\u003E                friendArrayList.add(friend);\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/notify data set changed in RecyclerView adapter\u003Cbr \/\u003E                adapter.notifyDataSetChanged();\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/close dialog after all\u003Cbr \/\u003E                dialog.dismiss();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onCancelListener(final Dialog dialog) {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                dialog.dismiss();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Customized layout for this adding dialog:\u003Cbr \/\u003E\u003Cscript class=\"brush: xml\" title=\"\u0026lt;u\u0026gt;dialog_add.xml\u0026lt;\/u\u0026gt;\" type=\"syntaxhighlighter\"\u003E\u003C![CDATA[ \u003C?xml version=\"1.0\" encoding=\"utf-8\"?\u003E\u003Clinearlayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:orientation=\"vertical\"\u003E     \u003CLinearLayout         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:orientation=\"horizontal\"\u003E         \u003CTextView             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_weight=\"0.5\"             android:gravity=\"center\"             android:text=\"@string\/name\" \/\u003E         \u003CEditText             android:id=\"@+id\/name\"             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_weight=\"0.5\"             android:inputType=\"textCapSentences\" \/\u003E    \u003C\/LinearLayout\u003E     \u003CLinearLayout         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:orientation=\"horizontal\"\u003E         \u003CTextView             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_weight=\"0.5\"             android:gravity=\"center\"             android:text=\"@string\/job\" \/\u003E         \u003CEditText             android:id=\"@+id\/job\"             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_weight=\"0.5\"             android:inputType=\"text\" \/\u003E    \u003C\/LinearLayout\u003E     \u003CLinearLayout         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:orientation=\"horizontal\"\u003E         \u003CTextView             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_gravity=\"center\"             android:layout_weight=\"0.5\"             android:gravity=\"center\"             android:text=\"@string\/gender\" \/\u003E         \u003CSpinner             android:id=\"@+id\/gender\"             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_weight=\"0.5\"             android:inputType=\"text\" \/\u003E    \u003C\/LinearLayout\u003E     \u003CLinearLayout         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:orientation=\"horizontal\"\u003E         \u003CButton             android:id=\"@+id\/btn_ok\"             android:layout_width=\"0dp\"             android:layout_height=\"wrap_content\"             android:layout_gravity=\"center\"             android:layout_weight=\"0.5\"             android:gravity=\"center\"             android:text=\"@string\/ok\" \/\u003E         \u003CButton             android:id=\"@+id\/btn_cancel\"             android:layout_width=\"0dp\"             android:text=\"@string\/cancel\"             android:layout_height=\"wrap_content\"             android:layout_weight=\"0.5\"\/\u003E    \u003C\/LinearLayout\u003E\u003C\/LinearLayout\u003E]]\u003E\u003C\/script\u003E \u0026nbsp; \u0026nbsp; Output running screen:\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/i.imgur.com\/ySPvyKk.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/ySPvyKk.png\" height=\"320\" width=\"213\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"border-radius: 3px; border: 1px solid rgb(102, 204, 204); box-shadow: rgb(136, 193, 204) 0px 0px 30px inset; color: #222222; font-family: Georgia, Utopia, 'Palatino Linotype', Palatino, serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFinal Code\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; The following are full code of some important files in this project.\u003Cbr \/\u003E\u0026nbsp; \u0026nbsp; POJO of project, data object: \u003Cbr \/\u003E\u003Cpre class=\"brush: java\" title=\"\u0026lt;u\u0026gt;Friend.java\u0026lt;\/u\u0026gt;\"\u003Epackage devexchanges.info.recycleviewandcardview;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class Friend {\u003Cbr \/\u003E\u003Cbr \/\u003E    private String name;\u003Cbr \/\u003E    private String job;\u003Cbr \/\u003E    private boolean gender;\u003Cbr \/\u003E\u003Cbr \/\u003E    public Friend(String name, boolean gender, String job) {\u003Cbr \/\u003E        this.name = name;\u003Cbr \/\u003E        this.gender = gender;\u003Cbr \/\u003E        this.job = job;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getName() {\u003Cbr \/\u003E        return name;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public String getJob() {\u003Cbr \/\u003E        return job;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    public boolean isGender() {\u003Cbr \/\u003E        return gender;\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Running (main) activity full code:\u003Cbr \/\u003E\u003Cpre class=\"brush: java; highlight: [34,36, 37, 116, 119,122, 43, 83, 84]\" title=\"\u0026lt;u\u0026gt;MainActivity.java\u0026lt;\/u\u0026gt;\"\u003Epackage devexchanges.info.recycleviewandcardview;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Dialog;\u003Cbr \/\u003Eimport android.os.Bundle;\u003Cbr \/\u003Eimport android.support.design.widget.FloatingActionButton;\u003Cbr \/\u003Eimport android.support.v7.app.AppCompatActivity;\u003Cbr \/\u003Eimport android.support.v7.widget.LinearLayoutManager;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.widget.AdapterView;\u003Cbr \/\u003Eimport android.widget.ArrayAdapter;\u003Cbr \/\u003Eimport android.widget.EditText;\u003Cbr \/\u003Eimport android.widget.Spinner;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.ArrayList;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class MainActivity extends AppCompatActivity {\u003Cbr \/\u003E\u003Cbr \/\u003E    private RecyclerView recyclerView;\u003Cbr \/\u003E    private RecyclerAdapter adapter;\u003Cbr \/\u003E    private ArrayList\u0026lt;Friend\u0026gt; friendArrayList;\u003Cbr \/\u003E    private FloatingActionButton fab;\u003Cbr \/\u003E    private boolean gender;\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    protected void onCreate(Bundle savedInstanceState) {\u003Cbr \/\u003E        super.onCreate(savedInstanceState);\u003Cbr \/\u003E        setContentView(R.layout.activity_main);\u003Cbr \/\u003E        friendArrayList = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E\u003Cbr \/\u003E        recyclerView = (RecyclerView) findViewById(R.id.recyle_view);\u003Cbr \/\u003E        fab = (FloatingActionButton) findViewById(R.id.fab);\u003Cbr \/\u003E\u003Cbr \/\u003E        recyclerView.setHasFixedSize(true);\u003Cbr \/\u003E\u003Cbr \/\u003E        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\u003Cbr \/\u003E        recyclerView.setLayoutManager(layoutManager);\u003Cbr \/\u003E\u003Cbr \/\u003E        setRecyclerViewData(); \/\/adding data to array list\u003Cbr \/\u003E        adapter = new RecyclerAdapter(this, friendArrayList);\u003Cbr \/\u003E        recyclerView.setAdapter(adapter);\u003Cbr \/\u003E\u003Cbr \/\u003E        fab.setOnClickListener(onAddingListener());\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void setRecyclerViewData() {\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Phan Thanh\", false, \"Cashier\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Nguyen Tuan\", true, \"Developer\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Tran Van Minh\", true, \"Designer\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Pham Mai Anh\", true, \"architect\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Nguyen Quynh Trang\", false, \"Doctor\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Hoang Dinh Cuong\", false, \"artist\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Tran Cong Bach\", true, \"Student\"));\u003Cbr \/\u003E        friendArrayList.add(new Friend(\"Vu Van Duong\", false, \"Teacher\"));\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onAddingListener() {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                final Dialog dialog = new Dialog(MainActivity.this);\u003Cbr \/\u003E                dialog.setContentView(R.layout.dialog_add); \/\/layout for dialog\u003Cbr \/\u003E                dialog.setTitle(\"Add a new friend\");\u003Cbr \/\u003E                dialog.setCancelable(false); \/\/none-dismiss when touching outside Dialog\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/ set the custom dialog components - texts and image\u003Cbr \/\u003E                EditText name = (EditText) dialog.findViewById(R.id.name);\u003Cbr \/\u003E                EditText job = (EditText) dialog.findViewById(R.id.job);\u003Cbr \/\u003E                Spinner spnGender = (Spinner) dialog.findViewById(R.id.gender);\u003Cbr \/\u003E                View btnAdd = dialog.findViewById(R.id.btn_ok);\u003Cbr \/\u003E                View btnCancel = dialog.findViewById(R.id.btn_cancel);\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/set spinner adapter\u003Cbr \/\u003E                ArrayList\u0026lt;String\u0026gt; gendersList = new ArrayList\u0026lt;\u0026gt;();\u003Cbr \/\u003E                gendersList.add(\"Male\");\u003Cbr \/\u003E                gendersList.add(\"Female\");\u003Cbr \/\u003E                ArrayAdapter\u0026lt;String\u0026gt; spnAdapter = new ArrayAdapter\u0026lt;String\u0026gt;(MainActivity.this,\u003Cbr \/\u003E                        android.R.layout.simple_dropdown_item_1line, gendersList);\u003Cbr \/\u003E                spnGender.setAdapter(spnAdapter);\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/set handling event for 2 buttons and spinner\u003Cbr \/\u003E                spnGender.setOnItemSelectedListener(onItemSelectedListener());\u003Cbr \/\u003E                btnAdd.setOnClickListener(onConfirmListener(name, job, dialog));\u003Cbr \/\u003E                btnCancel.setOnClickListener(onCancelListener(dialog));\u003Cbr \/\u003E\u003Cbr \/\u003E                dialog.show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private AdapterView.OnItemSelectedListener onItemSelectedListener() {\u003Cbr \/\u003E        return new AdapterView.OnItemSelectedListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onItemSelected(AdapterView parent, View view, int position, long id) {\u003Cbr \/\u003E                if (position == 0) {\u003Cbr \/\u003E                    gender = true;\u003Cbr \/\u003E                } else {\u003Cbr \/\u003E                    gender = false;\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onNothingSelected(AdapterView parent) {\u003Cbr \/\u003E\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onConfirmListener(final EditText name, final EditText job, final Dialog dialog) {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                Friend friend = new Friend(name.getText().toString().trim(), gender, job.getText().toString().trim());\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/adding new object to arraylist\u003Cbr \/\u003E                friendArrayList.add(friend);\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/notify data set changed in RecyclerView adapter\u003Cbr \/\u003E                adapter.notifyDataSetChanged();\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/close dialog after all\u003Cbr \/\u003E                dialog.dismiss();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onCancelListener(final Dialog dialog) {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                dialog.dismiss();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u0026nbsp; \u0026nbsp; Recycler adapter class, most important file:\u003Cbr \/\u003E\u003Cpre class=\"brush: java; highlight: [48, 80, 97, 39, 40, 43, 45]\" title=\"\u0026lt;u\u0026gt;RecyclerAdapter.java\u0026lt;\/u\u0026gt;\"\u003Epackage devexchanges.info.recycleviewandcardview;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport android.app.Activity;\u003Cbr \/\u003Eimport android.app.Dialog;\u003Cbr \/\u003Eimport android.support.v7.widget.RecyclerView;\u003Cbr \/\u003Eimport android.view.LayoutInflater;\u003Cbr \/\u003Eimport android.view.View;\u003Cbr \/\u003Eimport android.view.ViewGroup;\u003Cbr \/\u003Eimport android.widget.ImageView;\u003Cbr \/\u003Eimport android.widget.TextView;\u003Cbr \/\u003E\u003Cbr \/\u003Eimport java.util.List;\u003Cbr \/\u003E\u003Cbr \/\u003Epublic class RecyclerAdapter extends RecyclerView.Adapter\u0026lt;RecyclerAdapter.ViewHolder\u0026gt; {\u003Cbr \/\u003E\u003Cbr \/\u003E    private List\u0026lt;Friend\u0026gt; friends;\u003Cbr \/\u003E    private Activity activity;\u003Cbr \/\u003E\u003Cbr \/\u003E    public RecyclerAdapter(Activity activity, List\u0026lt;Friend\u0026gt; friends) {\u003Cbr \/\u003E        this.friends = friends;\u003Cbr \/\u003E        this.activity = activity;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/inflate your layout and pass it to view holder\u003Cbr \/\u003E        LayoutInflater inflater = activity.getLayoutInflater();\u003Cbr \/\u003E        View view = inflater.inflate(R.layout.item_recycler, viewGroup, false);\u003Cbr \/\u003E        ViewHolder viewHolder = new ViewHolder(view);\u003Cbr \/\u003E\u003Cbr \/\u003E        return viewHolder;\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public void onBindViewHolder(RecyclerAdapter.ViewHolder viewHolder, int position) {\u003Cbr \/\u003E\u003Cbr \/\u003E        \/\/setting data to view holder elements\u003Cbr \/\u003E        viewHolder.name.setText(friends.get(position).getName());\u003Cbr \/\u003E        viewHolder.job.setText(friends.get(position).getJob());\u003Cbr \/\u003E\u003Cbr \/\u003E        if (friends.get(position).isGender()) {\u003Cbr \/\u003E            viewHolder.imageView.setImageResource(R.mipmap.male);\u003Cbr \/\u003E        } else {\u003Cbr \/\u003E            viewHolder.imageView.setImageResource(R.mipmap.female);\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \/\/set on click listener for each element\u003Cbr \/\u003E        viewHolder.container.setOnClickListener(onClickListener(position));\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private void setDataToView(TextView name, TextView job, ImageView genderIcon, int position) {\u003Cbr \/\u003E        name.setText(friends.get(position).getName());\u003Cbr \/\u003E        job.setText(friends.get(position).getJob());\u003Cbr \/\u003E        if (friends.get(position).isGender()) {\u003Cbr \/\u003E            genderIcon.setImageResource(R.mipmap.male);\u003Cbr \/\u003E        } else {\u003Cbr \/\u003E            genderIcon.setImageResource(R.mipmap.female);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    @Override\u003Cbr \/\u003E    public int getItemCount() {\u003Cbr \/\u003E        return (null != friends ? friends.size() : 0);\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    private View.OnClickListener onClickListener(final int position) {\u003Cbr \/\u003E        return new View.OnClickListener() {\u003Cbr \/\u003E            @Override\u003Cbr \/\u003E            public void onClick(View v) {\u003Cbr \/\u003E                final Dialog dialog = new Dialog(activity);\u003Cbr \/\u003E                dialog.setContentView(R.layout.item_recycler);\u003Cbr \/\u003E                dialog.setTitle(\"Position \" + position);\u003Cbr \/\u003E                dialog.setCancelable(true); \/\/ dismiss when touching outside Dialog\u003Cbr \/\u003E\u003Cbr \/\u003E                \/\/ set the custom dialog components - texts and image\u003Cbr \/\u003E                TextView name = (TextView) dialog.findViewById(R.id.name);\u003Cbr \/\u003E                TextView job = (TextView) dialog.findViewById(R.id.job);\u003Cbr \/\u003E                ImageView icon = (ImageView) dialog.findViewById(R.id.image);\u003Cbr \/\u003E\u003Cbr \/\u003E                setDataToView(name, job, icon, position);\u003Cbr \/\u003E\u003Cbr \/\u003E                dialog.show();\u003Cbr \/\u003E            }\u003Cbr \/\u003E        };\u003Cbr \/\u003E    }\u003Cbr \/\u003E\u003Cbr \/\u003E    \/**\u003Cbr \/\u003E     * View holder to display each RecylerView item\u003Cbr \/\u003E     *\/\u003Cbr \/\u003E    protected class ViewHolder extends RecyclerView.ViewHolder {\u003Cbr \/\u003E        private ImageView imageView;\u003Cbr \/\u003E        private TextView name;\u003Cbr \/\u003E        private TextView job;\u003Cbr \/\u003E        private View container;\u003Cbr \/\u003E\u003Cbr \/\u003E        public ViewHolder(View view) {\u003Cbr \/\u003E            super(view);\u003Cbr \/\u003E            imageView = (ImageView) view.findViewById(R.id.image);\u003Cbr \/\u003E            name = (TextView) view.findViewById(R.id.name);\u003Cbr \/\u003E            job = (TextView) view.findViewById(R.id.job);\u003Cbr \/\u003E            container = view.findViewById(R.id.card_view);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cdiv style=\"border-radius: 3px; border: 1px solid rgb(102, 204, 204); box-shadow: rgb(136, 193, 204) 0px 0px 30px inset; color: #222222; font-family: Georgia, Utopia, 'Palatino Linotype', Palatino, serif; font-size: 17px; font-stretch: normal; line-height: 26px; margin: 0px -15px; padding: 8px;\"\u003E\u003Ch3 style=\"margin: 0px; position: relative;\"\u003EFinal thoughts\u003C\/h3\u003E\u003C\/div\u003E\u0026nbsp; \u0026nbsp; Not like ListView, adding \u003Ci\u003Eheader\/footer\u003C\/i\u003E \u003Ci\u003Elayout\u003C\/i\u003E not are not simple. In this post, I don't mention.\u0026nbsp;They are alike and not entirely the similar. I hope that through this post, you can understanding how RecyclerView works and using FloatingActionButton and CardView. Moreover, check \u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Ca href=\"http:\/\/www.devexchanges.info\/search\/label\/material%20design\" target=\"_blank\"\u003Ethis link\u003C\/a\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E to see more posts about Android Material Design.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/sh.st\/MAcyg\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/i.imgur.com\/LNgksiM.png\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.devexchanges.info\/feeds\/5949596116961333989\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.devexchanges.info\/2015\/09\/android-material-design-features.html#comment-form","title":"8 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/5949596116961333989"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/5499848987087947915\/posts\/default\/5949596116961333989"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.devexchanges.info\/2015\/09\/android-material-design-features.html","title":"Android Material Design Features: RecyclerView, CardView and FloatingActionButon"}],"author":[{"name":{"$t":"Hồng Thái"},"uri":{"$t":"https:\/\/plus.google.com\/117595713441950780620"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh4.googleusercontent.com\/-lZh5XqLvw8A\/AAAAAAAAAAI\/AAAAAAAABRI\/bisLJ4NcvPY\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/OYoi2MB2miM\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"8"},"gd$extendedProperty":[{"name":"commentSource","value":"1"},{"name":"commentModerationMode","value":"FILTERED_POSTMOD"}]}]}});